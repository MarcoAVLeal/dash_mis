(cal <- calendar(holidaysANBIMA, weekdays=c('saturday', 'sunday'), name='ANBIMA'))
(cal <- bizdays::create.calendar(holidaysANBIMA, weekdays=c('saturday', 'sunday'), name='ANBIMA'))
dates <- as.Date('2014-04-14') + 0:6
is.bizday(dates, cal)
dates <- as.Date('2022-04-01') + 0:31
dates
dates <- as.Date('2022-04-01') + 0:30
dates
dates <- as.Date('2022-04-01') + 0:29
dates
is.bizday(dates, cal)
is.bizday(dates, cal) %>% sum
dates_april <- as.Date('2022-04-01') + 0:29
as.Date('2022-03-01') + 0:29
dates_march <- as.Date('2022-03-01') + 0:31
dates_march
dates_march <- as.Date('2022-03-01') + 0:29
dates_march
is.bizday(dates_march) %>% sum
dates_march <- as.Date('2022-03-01') + 0:29
is.bizday(dates_march) %>% sum
dates_april <- as.Date('2022-04-01') + 0:29
(cal <- bizdays::create.calendar(holidaysANBIMA, weekdays=c('saturday', 'sunday'), name='ANBIMA'))
bizdays.options$set(default.calendar=cal)
dates_april <- as.Date('2022-04-01') + 0:29
dates_march <- as.Date('2022-03-01') + 0:29
is.bizday(dates_march) %>% sum
as.Date('2022-03-01') + 0:29
dates_march <- as.Date('2022-03-01') + 0:30
is.bizday(dates_march) %>% sum
date <- as.Date("2011-02-23", "%Y-%m-%d")
lubridate::days_in_month(date)
date <- as.Date(lubridate::today(), "%Y-%m-%d")
lubridate::days_in_month(date)
monthDays(as.Date('2010-01-01'))
require(Hmisc)
monthDays(as.Date('2010-01-01'))
lubridate::today()
lubridate::today() %>% lubridate::floor_date()
lubridate::today() %>% lubridate::floor_date
lubridate::today() %>% lubridate::floor_date(unit = "day")
lubridate::today() %>% lubridate::floor_date(unit = "month")
last_day = lubridate::today() %>% lubridate::ceiling_date_date(unit = "month")
first_day = lubridate::today() %>% lubridate::floor_date(unit = "month")
last_day = lubridate::today() %>% lubridate::ceiling_date_date(unit = "month")
last_day = lubridate::today() %>% lubridate::ceiling_date(unit = "month")
first_day = lubridate::today() %>% lubridate::floor_date(unit = "month")
last_day = lubridate::today() %>% lubridate::ceiling_date(unit = "month")
dates <- seq(first_day,last_day,"day")
dates
qtd_dias <- length(dates)
qtd_dias
first_day = lubridate::today() %>% lubridate::floor_date(unit = "month")
dates <- seq(first_day,last_day-1,"day")
dates
qtd_dias <- length(dates)
qtd_dias
dias_uteis <- dates[is.bizday(dates) %>% sum]
dias_uteis
dias_uteis <- dates[is.bizday(dates)]
dias_uteis
date <- as.Date(lubridate::today(), "%Y-%m-%d")
lubridate::days_in_month(date)
first_day = lubridate::today() %>% lubridate::floor_date(unit = "month")
last_day = lubridate::today() %>% lubridate::ceiling_date(unit = "month")
dates <- seq(first_day,last_day-1,"day")
qtd_dias <- length(dates)
dias_uteis <- dates[is.bizday(dates)]
qtd_dias_uteis <- length(dias_uteis)
qtd_dias_nao_uteis <- qtd_dias - qtd_dias_uteis
qtd_dias_nao_uteis
qtd_dias_uteis
df_pago$DATA_PAGAMENTO %>% max
(df_pago$DATA_PAGAMENTO %>% max) - 1
df_pago %>% dplyr::filter(DATA_PAGAMENTO > (max(DATA_PAGAMENTO)-10))
df_pago %>% dplyr::filter(DATA_PAGAMENTO > (max(DATA_PAGAMENTO)-10))  %>% dplyr::summarise(Producao = sum(VLR_PRODUCAO))
df_pago %>% dplyr::filter(DATA_PAGAMENTO > (max(DATA_PAGAMENTO)-10))  %>% dplyr::summarise(Producao = mean(VLR_PRODUCAO))
df_pago %>% dplyr::filter(DATA_PAGAMENTO > (max(DATA_PAGAMENTO)-10))  %>% dplyr::summarise(Producao = sum(VLR_PRODUCAO))
df_pago %>% dplyr::filter(DATA_PAGAMENTO > (max(DATA_PAGAMENTO)-10))  %>% dplyr::summarise(Producao = sum(VLR_PRODUCAO)/10)
df_pago %>% dplyr::filter(DATA_PAGAMENTO > (max(DATA_PAGAMENTO)-10)) ))  %>% dplyr::group_by(DATA_PAGAMENTO) %>% dplyr::summarise(Producao = mean(VLR_PRODUCAO))
df_pago %>% dplyr::filter(DATA_PAGAMENTO > (max(DATA_PAGAMENTO)-10))  %>% dplyr::group_by(DATA_PAGAMENTO) %>% dplyr::summarise(Producao = mean(VLR_PRODUCAO))
df_pago %>% dplyr::filter(DATA_PAGAMENTO > (max(DATA_PAGAMENTO)-10))  %>% dplyr::group_by(DATA_PAGAMENTO) %>% dplyr::summarise(Producao = sum(VLR_PRODUCAO))
df_pago %>%
dplyr::filter(DATA_PAGAMENTO > (max(DATA_PAGAMENTO)-10))  %>%
dplyr::group_by(DATA_PAGAMENTO) %>%
dplyr::summarise(Producao = sum(VLR_PRODUCAO))%>%
dplyr::summarise(Producao = mean(Producao))
producao_media_10dias<- df_pago %>%
dplyr::filter(DATA_PAGAMENTO > (max(DATA_PAGAMENTO)-10))  %>%
dplyr::group_by(DATA_PAGAMENTO) %>%
dplyr::summarise(Producao = sum(VLR_PRODUCAO))%>%
dplyr::summarise(Producao = mean(Producao))
producao_media_10dias
monthDays(as.Date('2010-01-01'))
numberOfDays <- function(date) {
m <- format(date, format="%m")
while (format(date, format="%m") == m) {
date <- date + 1
}
return(as.integer(format(date - 1, format="%d")))
}
numberOfDays(lubridate::today())
difftime( as.Date("2011-06-01"), as.Date("2011-05-01") )
difftime( lubridate::today(), first_day )
qtd_dias_corridos<-numberOfDays(lubridate::today())
qtd_dias_corridos<-difftime( lubridate::today(), first_day )
qtd_dias_corridos
qtd_dias_restantes  <- (df_pago$DATA_PAGAMENTO %>% max) - 1
qtd_dias_restantes
qtd_dias_restantes  <- qtd_dias - qtd_dias_corridos
qtd_dias_restantes
dias_uteis          <- dates[is.bizday(dates)]
qtd_dias_uteis      <- length(dias_uteis)
qtd_dias_uteis
qtd_dias_restantes
dias_uteis_corridos <- dates[dates <= lubridate::today()]
dias_uteis_corridos
qtd_dias_uteis_corridos <- length(dias_uteis_corridos)
qtd_dias_uteis_corridos
qtd_dias_uteis_restantes <- qtd_dias_uteis_corridos - qtd_dias_uteis_restantes
qtd_dias_uteis_restantes <-  qtd_dias_uteis - qtd_dias_uteis_corridos
qtd_dias_uteis_restantes
(cal <- bizdays::create.calendar(holidaysANBIMA, weekdays=c('saturday', 'sunday'), name='ANBIMA'))
bizdays.options$set(default.calendar=cal)
first_day           =  lubridate::today() %>% lubridate::floor_date(unit = "month")
last_day            =  lubridate::today() %>% lubridate::ceiling_date(unit = "month")
dates               <- seq(first_day,last_day-1,"day")
qtd_dias            <- length(dates)
dias_uteis          <- dates[is.bizday(dates)]
dias_uteis_corridos <- dates[dates <= lubridate::today()]
qtd_dias_uteis      <- length(dias_uteis)
qtd_dias_corridos   <- difftime( lubridate::today(), first_day )
qtd_dias_nao_uteis  <- qtd_dias - qtd_dias_uteis
qtd_dias_restantes  <- qtd_dias - qtd_dias_corridos
qtd_dias_uteis_corridos  <- length(dias_uteis_corridos)
qtd_dias_uteis_restantes <-  qtd_dias_uteis - qtd_dias_uteis_corridos
require(Hmisc)
monthDays(as.Date('2010-01-01'))
numberOfDays <- function(date) {
m <- format(date, format="%m")
while (format(date, format="%m") == m) {
date <- date + 1
}
return(as.integer(format(date - 1, format="%d")))
}
qtd_dias_uteis_restantes
qtd_dias_uteis_restantes <-  qtd_dias_uteis - qtd_dias_uteis_corridos
qtd_dias_uteis_corridos  <- length(dias_uteis_corridos)
qtd_dias_uteis_corridos
qtd_dias_uteis
qtd_dias_uteis_corridos
(cal <- bizdays::create.calendar(holidaysANBIMA, weekdays=c('saturday', 'sunday'), name='ANBIMA'))
bizdays.options$set(default.calendar=cal)
first_day           =  lubridate::today() %>% lubridate::floor_date(unit = "month")
last_day            =  lubridate::today() %>% lubridate::ceiling_date(unit = "month")
dates               <- seq(first_day,last_day-1,"day")
qtd_dias            <- length(dates)
dias_uteis          <- dates[is.bizday(dates)]
dias_uteis
dias_uteis_corridos <- dates[dates <= lubridate::today()]
dias_uteis_corridos
dias_uteis          <- dates[is.bizday(dates)]
dias_uteis
(cal <- bizdays::create.calendar(holidaysANBIMA, weekdays=c('saturday', 'sunday'), name='ANBIMA'))
bizdays.options$set(default.calendar=cal)
first_day           =  lubridate::today() %>% lubridate::floor_date(unit = "month")
last_day            =  lubridate::today() %>% lubridate::ceiling_date(unit = "month")
dates               <- seq(first_day,last_day-1,"day")
dates
qtd_dias            <- length(dates)
qtd_dias
dias_uteis          <- dates[is.bizday(dates)]
dias_uteis
dias_uteis_corridos <- dates[dias_uteis <= lubridate::today()]
qtd_dias_uteis      <- length(dias_uteis)
qtd_dias_corridos   <- difftime( lubridate::today(), first_day )
qtd_dias_nao_uteis  <- qtd_dias - qtd_dias_uteis
qtd_dias_restantes  <- qtd_dias - qtd_dias_corridos
qtd_dias_uteis_corridos  <- length(dias_uteis_corridos)
qtd_dias_uteis_restantes <-  qtd_dias_uteis - qtd_dias_uteis_corridos
qtd_dias_uteis_restantes
qtd_dias_uteis_corridos
dias_uteis_corridos <- dates[dias_uteis <= lubridate::today()]
dias_uteis_corridos
dates               <- seq(first_day,last_day-1,"day")
qtd_dias            <- length(dates)
dias_uteis          <- dates[is.bizday(dates)]
dias_uteis
dias_uteis          <- as.Date(dates[is.bizday(dates)])
dias_uteis          <- as.Date(dates[is.bizday(dates)])
dias_uteis
dates[dias_uteis <= lubridate::today()]
dias_uteis <= lubridate::today()
(cal <- bizdays::create.calendar(holidaysANBIMA, weekdays=c('saturday', 'sunday'), name='ANBIMA'))
bizdays.options$set(default.calendar=cal)
first_day           =  lubridate::today() %>% lubridate::floor_date(unit = "month")
last_day            =  lubridate::today() %>% lubridate::ceiling_date(unit = "month")
dates               <- seq(first_day,last_day-1,"day")
qtd_dias            <- length(dates)
dias_uteis          <- as.Date(dates[is.bizday(dates)])
dias_uteis_corridos <- dias_uteis[dias_uteis <= lubridate::today()]
qtd_dias_uteis      <- length(dias_uteis)
qtd_dias_corridos   <- difftime( lubridate::today(), first_day )
qtd_dias_nao_uteis  <- qtd_dias - qtd_dias_uteis
qtd_dias_restantes  <- qtd_dias - qtd_dias_corridos
qtd_dias_uteis_corridos  <- length(dias_uteis_corridos)
qtd_dias_uteis_restantes <-  qtd_dias_uteis - qtd_dias_uteis_corridos
qtd_dias_uteis_restantes
qtd_dias_uteis_corridos
projetado <- producao_media_10dias*qtd_dias_uteis_restantes
projetado
projetado <- producao_media_10dias*qtd_dias_uteis_restantes +prod_mes_atual
prod_mes_atual
projetado <- producao_media_10dias*qtd_dias_uteis_restantes +prod_mes_atual$Producao
projetado
dias_uteis          <- as.Date(dates[is.bizday(dates)])
dias_uteis          <- as.Date(dates[is.bizday(dates)])
dias_uteis
(max(DATA_PAGAMENTO)-10
(max(DATA_PAGAMENTO)-10)
(max(DATA_PAGAMENTO)-10)
(max(DATA_PAGAMENTO)-10))
df_pago %>%
dplyr::filter(DATA_PAGAMENTO > (max(DATA_PAGAMENTO)-10))
max(df_pago$DATA_PAGAMENTO)-10
df_pago %>%
dplyr::filter(DATA_PAGAMENTO > (max(as.Date(DATA_PAGAMENTO))-10))
df_pago %>%
dplyr::filter(DATA_PAGAMENTO > (max(as.Date(DATA_PAGAMENTO))-10))
df_pago
producao_media_10dias<- df_pago %>%
dplyr::filter(DATA_PAGAMENTO > (max(as.Date(DATA_PAGAMENTO))-10))  %>%
dplyr::group_by(DATA_PAGAMENTO) %>%
dplyr::summarise(Producao = sum(VLR_PRODUCAO))%>%
dplyr::summarise(Producao = mean(Producao))
producao_media_10dias
df_pago %>%
dplyr::filter(DATA_PAGAMENTO > (max(as.Date(DATA_PAGAMENTO))-10))
df_pago %>%
dplyr::filter(DATA_PAGAMENTO > (max(as.Date(DATA_PAGAMENTO))-10)) %>%
dplyr::group_by(DATA_PAGAMENTO) %>%
dplyr::summarise(Producao = sum(VLR_PRODUCAO))
onedrive_url <- "https://crefaz-my.sharepoint.com/:x:/g/personal/gestaodedados4_crefaz_onmicrosoft_com/ET_WfaYB2k1IouEbVGeMcPYBFp_36rF5CLDjQgZi3iTrbw?download=1"
df_prod <<- read_url_csv(onedrive_url)
df_prod$DATACADASTRO<<-lubridate::as_date(df_prod$DATACADASTRO)
df_prod$DATA_PAGAMENTO<<-lubridate::as_date(df_prod$DATA_PAGAMENTO)
df_prod$ANO_CADASTRO<<-lubridate::year(df_prod$DATACADASTRO)
df_prod$ANO_PAGAMENTO<<-lubridate::year(df_prod$DATA_PAGAMENTO)
df_prod$MES_CADASTRO<<-lubridate::month(df_prod$DATACADASTRO)
df_prod$MES_PAGAMENTO<<-lubridate::month(df_prod$DATA_PAGAMENTO)
df_pago <<- df_prod %>% dplyr::filter(STATUS_PRINCIPAL == "PAGO AO CLIENTE")
prod_total <<- df_pago %>% dplyr::summarise(Producao = sum(VLR_PRODUCAO),
Qntd     =sum(Qntd_Propostas))
df_prod$DATACADASTRO<<-lubridate::as_date(df_prod$DATACADASTRO)
onedrive_url <- "https://crefaz-my.sharepoint.com/:x:/g/personal/gestaodedados4_crefaz_onmicrosoft_com/ET_WfaYB2k1IouEbVGeMcPYBFp_36rF5CLDjQgZi3iTrbw?download=1"
df_prod <<- read_url_csv(onedrive_url)
df_prod$DATACADASTRO<<-lubridate::as_date(df_prod$DATACADASTRO)
df_prod$DATACADASTRO<<-lubridate::as_date(df_prod$DATACADASTRO)
df_prod <<- read_url_csv(onedrive_url)
View(df_prod)
df_prod$DATACADASTRO<<-lubridate::as_date(df_prod$DATACADASTRO)
df_prod <- read_url_csv(onedrive_url)
df_prod$DATACADASTRO<-lubridate::as_date(df_prod$DATACADASTRO)
df_prod$DATA_PAGAMENTO<<-lubridate::as_date(df_prod$DATA_PAGAMENTO)
shiny::runApp()
runApp()
onedrive_url <- "https://crefaz-my.sharepoint.com/:x:/g/personal/gestaodedados4_crefaz_onmicrosoft_com/EeMfqB4KwUBBmD-HMQrGtLIBiAliiY-t0S7-osHkDKN-qA?download=1"
df_prod <- read_url_csv(onedrive_url)
df_prod$DATACADASTRO<<-lubridate::as_date(df_prod$DATACADASTRO)
runApp()
runApp()
url_motor_agregado_geral <- "https://crefaz-my.sharepoint.com/:x:/g/personal/gestaodedados4_crefaz_onmicrosoft_com/Edb_Zdd38UNDkP-F3h4Nl0MBuBhsPZ050EXvy00dMIOBiw?download=1"
df_prod <<- read_url_csv(url_motor_agregado_geral)
df_prod$DATACADASTRO<<-lubridate::as_date(df_prod$DATACADASTRO)
df_prod <- read_url_csv(url_motor_agregado_geral)
df_prod$DATACADASTRO<<-lubridate::as_date(df_prod$DATACADASTRO)
df_prod                 <- read_url_csv(url_motor_agregado_geral)
df_prod %>%
dplyr::filter(DATA_PAGAMENTO > (max(as.Date(DATA_PAGAMENTO))-10)) %>%
dplyr::group_by(DATA_PAGAMENTO) %>%
dplyr::summarise(Producao = sum(VLR_PRODUCAO))
df_prod                 <- read_url_csv(url_motor_agregado_geral)
df_prod$DATACADASTRO    <<-lubridate::as_date(df_prod$DATACADASTRO)
df_prod$DATACADASTRO    <-lubridate::as_date(df_prod$DATACADASTRO)
df_prod$DATA_PAGAMENTO  <-lubridate::as_date(df_prod$DATA_PAGAMENTO)
df_prod$ANO_CADASTRO    <-lubridate::year(df_prod$DATACADASTRO)
df_prod$ANO_PAGAMENTO   <-lubridate::year(df_prod$DATA_PAGAMENTO)
df_prod$MES_CADASTRO    <-lubridate::month(df_prod$DATACADASTRO)
df_prod$MES_PAGAMENTO   <-lubridate::month(df_prod$DATA_PAGAMENTO)
prod_mes_atual <- df_pago %>% dplyr::filter( (ANO_PAGAMENTO==ano_atual)  & (MES_PAGAMENTO==mes_atual))   %>% dplyr::summarise(Producao = sum(VLR_PRODUCAO),
Qntd     =sum(Qntd_Propostas))
prod_mes_atual <- df_prod %>% dplyr::filter( (ANO_PAGAMENTO==ano_atual)  & (MES_PAGAMENTO==mes_atual))   %>% dplyr::summarise(Producao = sum(VLR_PRODUCAO),
Qntd     =sum(Qntd_Propostas))
prod_mes_atual
df_prod %>%
dplyr::filter(DATA_PAGAMENTO > (max(as.Date(DATA_PAGAMENTO))-10)) %>%
dplyr::group_by(DATA_PAGAMENTO) %>%
dplyr::summarise(Producao = sum(VLR_PRODUCAO))
df_prod %>%
dplyr::filter(DATA_PAGAMENTO > (max(as.Date(DATA_PAGAMENTO))-10)) %>%
dplyr::group_by(DATA_PAGAMENTO) %>%
dplyr::summarise(Producao = sum(VLR_PRODUCAO))
df_prod %>%
dplyr::filter(DATA_PAGAMENTO > (max(as.Date(DATA_PAGAMENTO))-10))
library(bizdays)
(cal <- bizdays::create.calendar(holidaysANBIMA, weekdays=c('saturday', 'sunday'), name='ANBIMA'))
bizdays.options$set(default.calendar=cal)
first_day           =  lubridate::today() %>% lubridate::floor_date(unit = "month")
last_day            =  lubridate::today() %>% lubridate::ceiling_date(unit = "month")
dates               <- seq(first_day,last_day-1,"day")
qtd_dias            <- length(dates)
dias_uteis          <- as.Date(dates[is.bizday(dates)])
dias_uteis_corridos <- dias_uteis[dias_uteis <= lubridate::today()]
qtd_dias_uteis      <- length(dias_uteis)
qtd_dias_corridos   <- difftime( lubridate::today(), first_day )
qtd_dias_nao_uteis  <- qtd_dias - qtd_dias_uteis
qtd_dias_restantes  <- qtd_dias - qtd_dias_corridos
qtd_dias_uteis_corridos  <- length(dias_uteis_corridos)
qtd_dias_uteis_restantes <-  qtd_dias_uteis - qtd_dias_uteis_corridos
qtd_dias_uteis_restantes
max(as.Date(df_prod$DATA_PAGAMENTO))-10
df_prod$DATA_PAGAMENTO
max(as.Date(df_prod$DATA_PAGAMENTO))
which(is.na(as.Date(df_prod$DATA_PAGAMENTO)))
as.Date(df_prod$DATA_PAGAMENTO)
is.na(as.Date(df_prod$DATA_PAGAMENTO))
df_prod                 <- read_url_csv(url_motor_agregado_geral)
df_prod$DATACADASTRO    <-lubridate::as_date(df_prod$DATACADASTRO)
df_prod$DATA_PAGAMENTO  <-lubridate::as_date(df_prod$DATA_PAGAMENTO)
df_prod$DATA_PAGAMENTO
is.na(DATA_PAGAMENTO)
is.na(df_prod$DATA_PAGAMENTO)
is.na(df_prod$DATA_PAGAMENTO) == TRUE
is.na(df_prod$DATA_PAGAMENTO)  %>% which
pos_na <- is.na(df_prod$DATA_PAGAMENTO)  %>% which
df_prod[pos_na,]
url_motor_agregado_geral <- "https://crefaz-my.sharepoint.com/:x:/g/personal/gestaodedados4_crefaz_onmicrosoft_com/Edb_Zdd38UNDkP-F3h4Nl0MBuBhsPZ050EXvy00dMIOBiw?download=1"
df_prod                 <- read_url_csv(url_motor_agregado_geral)
df_prod$DATACADASTRO    <-lubridate::as_date(df_prod$DATACADASTRO)
df_prod$DATA_PAGAMENTO  <-lubridate::as_date(df_prod$DATA_PAGAMENTO)
pos_na <- is.na(df_prod$DATA_PAGAMENTO)  %>% which
df_prod[pos_na,]
df_prod$ANO_CADASTRO    <-lubridate::year(df_prod$DATACADASTRO)
df_prod$ANO_PAGAMENTO   <-lubridate::year(df_prod$DATA_PAGAMENTO)
df_prod$MES_CADASTRO    <-lubridate::month(df_prod$DATACADASTRO)
df_prod$MES_PAGAMENTO   <-lubridate::month(df_prod$DATA_PAGAMENTO)
(cal <- bizdays::create.calendar(holidaysANBIMA, weekdays=c('saturday', 'sunday'), name='ANBIMA'))
bizdays.options$set(default.calendar=cal)
first_day           =  lubridate::today() %>% lubridate::floor_date(unit = "month")
last_day            =  lubridate::today() %>% lubridate::ceiling_date(unit = "month")
dates               <- seq(first_day,last_day-1,"day")
qtd_dias            <- length(dates)
dias_uteis          <- as.Date(dates[is.bizday(dates)])
dias_uteis_corridos <- dias_uteis[dias_uteis <= lubridate::today()]
qtd_dias_uteis      <- length(dias_uteis)
qtd_dias_corridos   <- difftime( lubridate::today(), first_day )
qtd_dias_nao_uteis  <- qtd_dias - qtd_dias_uteis
qtd_dias_restantes  <- qtd_dias - qtd_dias_corridos
qtd_dias_uteis_corridos  <- length(dias_uteis_corridos)
qtd_dias_uteis_restantes <-  qtd_dias_uteis - qtd_dias_uteis_corridos
max(as.Date(df_prod$DATA_PAGAMENTO))
is.na(as.Date(df_prod$DATA_PAGAMENTO))
df_prod %>%
dplyr::filter(DATA_PAGAMENTO > (max(as.Date(DATA_PAGAMENTO))-10)) %>%
dplyr::group_by(DATA_PAGAMENTO) %>%
dplyr::summarise(Producao = sum(VLR_PRODUCAO))
producao_media_10dias<- df_prod %>%
dplyr::filter(DATA_PAGAMENTO > (max(as.Date(DATA_PAGAMENTO))-10))  %>%
dplyr::group_by(DATA_PAGAMENTO) %>%
dplyr::summarise(Producao = sum(VLR_PRODUCAO))%>%
dplyr::summarise(Producao = mean(Producao))
projetado <- producao_media_10dias*qtd_dias_uteis_restantes +prod_mes_atual$Producao
projetado
f_data <- as.Date(as.yearmon(as.Date(max(df_pago$DATA_PAGAMENTO,na.rm = TRUE))) -.6, frac = 1)
f_data
producao_media_10dias<- df_prod %>%
dplyr::filter(DATA_PAGAMENTO > (max(as.Date(DATA_PAGAMENTO))-10))  %>%
dplyr::group_by(DATA_PAGAMENTO) %>%
dplyr::summarise(Producao = sum(VLR_PRODUCAO))%>%
dplyr::summarise(Producao = mean(Producao))
producao_media_10dias
projetado <- producao_media_10dias*qtd_dias_uteis_restantes +prod_mes_atual$Producao
projetado
prod_mes_atual$Producao
producao_media_10dias*qtd_dias_uteis_restantes
runApp()
rod_total[1,2]
prod_total[1,2]
runApp()
runApp()
url_motor_agregado_geral <- "https://crefaz-my.sharepoint.com/:x:/g/personal/gestaodedados4_crefaz_onmicrosoft_com/Edb_Zdd38UNDkP-F3h4Nl0MBuBhsPZ050EXvy00dMIOBiw?download=1"
df_prod                 <<- read_url_csv(url_motor_agregado_geral)
df_prod$DATACADASTRO    <<-lubridate::as_date(df_prod$DATACADASTRO)
df_prod$DATA_PAGAMENTO  <<-lubridate::as_date(df_prod$DATA_PAGAMENTO)
df_prod$DATA_PAGAMENTO %>% range
runApp()
runApp()
runApp()
p1 <- autoplot.zoo(p1) +
geom_line(size = 0.5,alpha=1,color="black") +
geom_smooth(method="gam",
formula=  y ~ splines::bs(x,  degree = 3))+
labs(x = "Data", y = "Produção") +
scale_x_date(date_breaks = "months",date_labels = "%Y-%m") +
axis.theme(x.angle = 45,vjust = 1,hjust = 1,axis.title.size.x = 16,axis.title.size.y = 16,tick.size = 16)
runApp()
runApp()
runApp()
runApp()
install.packages("Tidyquant")
y
install.packages("tidyquant")
library("tidyquant")
runApp()
runApp()
p1 <- autoplot.zoo(p1) +
geom_line(size = 0.35,alpha=1,color="black") +
#geom_smooth(method="gam",color="red")+
geom_ma(ma_fun = SMA, n = 7) +
labs(x = "Data", y = "Produção") +
scale_x_date(date_breaks = "months",date_labels = "%Y-%m") +
axis.theme(x.angle = 45,vjust = 1,hjust = 1,axis.title.size.x = 16,axis.title.size.y = 16,tick.size = 16)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(scales)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
p1 <- df_prod  %>%
dplyr::group_by(DATA_PAGAMENTO) %>%
dplyr::summarise(Producao = sum(VLR_PRODUCAO),
Qntd     = sum(Qntd_Propostas)) %>%
dplyr::select(DATA_PAGAMENTO,Producao)
p1 <-  zoo(x = p1$Producao  ,order.by = p1$DATA_PAGAMENTO)
p1 <- autoplot.zoo(p1,color = "Produção(R$)") +
#geom_line(size = 0.35,alpha=1,aes(color="Produção(R$)")) +
#geom_smooth(level=0.0, aes(colour="Moving average"), se=FALSE)+
geom_smooth(method="gam",aes(colour="Spline"),lwd = 0.75,se = FALSE)+
#geom_ma(ma_fun = TTR::SMA, n = 7) +
labs(x = "Data", y = "Produção") +
scale_x_date(date_breaks = "months",date_labels = "%Y-%m") +
axis.theme(x.angle = 45,vjust = 1,hjust = 1,axis.title.size.x = 16,axis.title.size.y = 16,tick.size = 16)
p1 <- ggplotly(p1) %>% layout(hovermode = "x unified",
spikedistance =  -1,margin = c(0,0,0,10),legend = l,
xaxis = list(title = "<b>Dias</b>", showspikes = TRUE, titlefont = list(size = 16),rangeslider = list(visible = T),
spikemode  = 'across', #toaxis, across, marker
spikesnap = 'cursor',  ticks = "outside",tickangle = -45,
showline=TRUE,tickfont = list(size = 12),fixedrange=TRUE,
showgrid=TRUE),
yaxis = list (title = "<b>Produção (R$)</b>",
spikemode  = 'across', #toaxis, across, marker
spikesnap = 'cursor', zeroline=FALSE,titlefont = list(size = 16),
showline=TRUE,tickfont = list(size = 12),fixedrange=TRUE,
showgrid=TRUE),height = 580) %>% config(displayModeBar = FALSE)
p1$x$data
p1$x$data
p1$x[[2]]
p1$x
p1$x[[1]]
p1$x[[1]][[2]]
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
loess <- loess.smooth(x = df_prod$DATA_PAGAMENTO,y = df_prod$VLR_PRODUCAO)
loess
plot(loess)
library(pspline)
sp <-   ss(df_prod$DATA_PAGAMENTO, df_prod$VLR_PRODUCAO, nknots = 10)
library(npreg)
sp <-   ss(df_prod$DATA_PAGAMENTO, df_prod$VLR_PRODUCAO, nknots = 10)
plot(sp)
sp <-   ss(df_prod$DATA_PAGAMENTO, df_prod$VLR_PRODUCAO, nknots = 100)
plot(sp)
sp <-   ss(df_prod$DATA_PAGAMENTO, df_prod$VLR_PRODUCAO, nknots = 200)
plot(sp)
runApp()
sp$w
runApp()
sp <-  lm(data = df_prod, VLR_PRODUCAO ~ bs(DATA_PAGAMENTO))
library(splines)
library(npreg)
library(splines)
library(Ecdat)
sp <-  lm(data = df_prod, VLR_PRODUCAO ~ bs(DATA_PAGAMENTO))
sp
plot(sp)
runApp()
