axis.theme(title_size = 12,textsize = 12,pos_leg = "bottom",x.angle = 45,vjust = 1,hjust=1) +
geom_vline(xintercept = max(df_melt$dia),
linetype = "dashed", colour = "red", alpha = 1,size = 0.8) +
geom_hline(yintercept = sum(qtd_contatos_enviados),
linetype = "dashed", colour = "red", alpha = 1,size = 0.8)
plot <- ggplotly(p1) %>% layout(hovermode = "x", spikedistance =  -1,margin = c(0,0,0,10),
xaxis = list(title = "<b>Dias</b>", showspikes = TRUE, titlefont = list(size = 24),
spikemode  = 'across', #toaxis, across, marker
spikesnap = 'cursor',  ticks = "outside",tickangle = -45,
showline=TRUE,tickfont = list(size = 20),fixedrange=TRUE,
showgrid=TRUE),
yaxis = list (title = "<b>Qntd. Envios</b>",
spikemode  = 'across', #toaxis, across, marker
spikesnap = 'cursor', zeroline=FALSE,titlefont = list(size = 24),
showline=TRUE,tickfont = list(size = 20),fixedrange=TRUE,
showgrid=TRUE),height = 480) %>% config(displayModeBar = FALSE)
plot
})
output$plot_envio_acumulado <- renderPlotly({
p1 <- ggplot(data = df_melt,aes(x= dia, y = Acumulado)) +
geom_point(size = 1.2, alpha = 0.75)+
geom_line(size = 1.2, alpha = 0.75,aes(color  = Legenda,group = Legenda)) +
scale_color_manual(values = c("darkgreen", "red","darkblue")) +
geom_vline(xintercept = max(df_melt$dia),
linetype = "dashed", colour = "red", alpha = 1,size = 0.8) +
scale_x_continuous(breaks = seq(min(x1$dia),max(x1$dia),by = paste(length(unique(lubridate::month(x1$dia))),"days") ) )+
# scale_y_continuous(breaks = seq(0,1,0.1))+
axis.theme(title_size = 12,textsize = 12,pos_leg = "bottom",x.angle = 45,vjust = 1,hjust=1)
plot <- ggplotly(p1) %>% layout(hovermode = "y", spikedistance =  -1,margin = c(0,0,0,10),
xaxis = list(title = "<b>Dias</b>", showspikes = TRUE, titlefont = list(size = 24),
spikemode  = 'across', #toaxis, across, marker
spikesnap = 'cursor',  ticks = "outside",tickangle = -45,
showline=TRUE,tickfont = list(size = 20),fixedrange=TRUE,
showgrid=TRUE),
yaxis = list (title = "<b>Qntd. Envios</b>",
spikemode  = 'across', #toaxis, across, marker
spikesnap = 'cursor', zeroline=FALSE,titlefont = list(size = 24),
showline=TRUE,tickfont = list(size = 20),fixedrange=TRUE,
showgrid=TRUE),height = 480) %>% config(displayModeBar = FALSE)
plot
})
output$plot_envio_acumulado_mes <- renderPlotly({
p1 <- ggplot(data = df_melt,aes(x= dia, y = Acumulado)) +
geom_point(size = 1.2, alpha = 0.75)+
geom_line(size = 1.2, alpha = 0.75,aes(color  = Legenda,group = Legenda)) +
scale_color_manual(values = c("darkgreen", "red","darkblue")) +
geom_hline(yintercept = 5000,
linetype = "dashed", colour = "red", alpha = 1,size = 0.8) +
geom_vline(xintercept = max(df_melt$dia),
linetype = "dashed", colour = "red", alpha = 1,size = 0.8) +
scale_x_continuous(breaks = seq(min(x1$dia),max(x1$dia),by = paste(length(unique(lubridate::month(x1$dia))),"days") ) )+
# scale_y_continuous(breaks = seq(0,1,0.1))+
axis.theme(title_size = 12,textsize = 12,pos_leg = "bottom",x.angle = 45,vjust = 1,hjust=1)
plot <- ggplotly(p1) %>% layout(hovermode = "y", spikedistance =  -1,margin = c(0,0,0,10),
xaxis = list(title = "<b>Dias</b>", showspikes = TRUE, titlefont = list(size = 24),
spikemode  = 'across', #toaxis, across, marker
spikesnap = 'cursor',  ticks = "outside",tickangle = -45,
showline=TRUE,tickfont = list(size = 20),fixedrange=TRUE,
showgrid=TRUE),
yaxis = list (title = "<b>Qntd. Envios</b>",
spikemode  = 'across', #toaxis, across, marker
spikesnap = 'cursor', zeroline=FALSE,titlefont = list(size = 24),
showline=TRUE,tickfont = list(size = 20),fixedrange=TRUE,
showgrid=TRUE),height = 480) %>% config(displayModeBar = FALSE)
plot
})
x1
})
dataset <- reactive({
data = df1
if (length(input$canal)){
f1 =  data$Lojas %in% input$canal
data = data[f1,]
}
else {
data
}
if (length(input$regional)){
f2 = data$Regional %in% input$regional
data = data[f2,]
#updateSelectInput(session = session,inputId = "canal",choices = c(sort(unique(data[,"Lojas"]))),selected = input$canal)
}
else {
data
}
data
# updateSelectInput(session = session,inputId = "regional",choices = c(sort(unique(data[,"REGIONAL"]))),selected = input$regional)
output$total_bitrix_vbox <- renderUI({
p(nrow(data),br(), " Total",style="color:#273658;text-align:center;font-weight:bold;font-size:30px")
})
group_count <- as.character(input$visao)
Total <- sum
#as.character(input$visao)
table <- table(data[,c(group_count)],data$`Fase do negocio`)  %>% as.data.frame
table <- reshape2::dcast(table, Var1 ~ Var2, value.var="Freq")
#table <- table %>% mutate("Taxa de Pagos" = paste0(round((PAGO/Total)*100,2)," %"))
colnames(table)[1] <- c("Usuário")
table_fases_group <- matrix(data = 0,nrow = nrow(table),ncol = 7) %>% as.data.frame
colnames(table_fases_group) <- c("Usuário", "NOVO","PROSPECTANDO","NEGOCIANDO","EM ANÁLISE", "PAGO","DESAFIO")
for(name in colnames(table)){
table_fases_group[name] <- table[name]
}
output$taxa_leads_bitrix <- renderUI({
leads_tratados         <<- data %>% filter(`Fase do negocio` != "NOVO") %>% nrow
pagos                  <<- data %>% filter(`Fase do negocio` == "PAGO") %>% nrow
taxa_tratados          <<- paste0(round((pagos/leads_tratados)*100,2)," %")
p(taxa_tratados,br(), " Taxa de Leads Tratados",style="color:#273658;text-align:center;font-weight:bold;font-size:30px")
})
output$proporcao_leads_fase <- renderTable({
resumo_fases           <- data.frame(Fase = c("NOVO","PROSPECTANDO","NEGOCIANDO","EM ANÁLISE","PAGO","DESAFIO"), Qntd. = 0, "QntdP" = 0)
aux1                   <- table(data$`Fase do negocio`) %>% as.data.frame %>%
mutate(Var1 = as.character(Var1)) %>%
mutate(Var1 = if_else(Var1 == "PAGO", "PAGO",Var1))
aux2                   <- prop.table(table(data$`Fase do negocio`)) %>%
as.data.frame %>%
mutate(Var1 = as.character(Var1)) %>%
mutate(Var1 = if_else(Var1 == "PAGO", "PAGO",Var1)) %>%
mutate(Freq = paste0(round(Freq * 100,2),"%"))
for(fase in aux1$Var1){
resumo_fases[resumo_fases$Fase == fase,"Qntd."] <- aux1[aux1$Var1 == fase,"Freq"]
resumo_fases[resumo_fases$Fase == fase,"QntdP"] <- aux2[aux2$Var1 == fase,"Freq"]
}
colnames(resumo_fases) <- c("Fase","Qntd.","%")
resumo_fases <- resumo_fases  %>%
mutate(prop = Qntd. / sum(resumo_fases$Qntd.) *100) %>%
mutate(ypos = cumsum(prop)- 0.5*prop ) %>%
dplyr::select("Fase","Qntd.","%")
resumo_fases$Qntd. <- round(resumo_fases$Qntd.,0)
resumo_fases
})
table_fases_group <- table_fases_group %>% mutate("Total" =  PROSPECTANDO + NEGOCIANDO + `EM ANÁLISE` + PAGO + DESAFIO)
table_fases_group <- table_fases_group %>% mutate("Taxa de Pagos" = ifelse(is.nan(PAGO/Total),"0 %",paste0(round((PAGO/Total)*100,2)," %")))
table_fases_group
})
contatos <- read_url_csv(url = "https://crefaz-my.sharepoint.com/:x:/g/personal/gestaodedados4_crefaz_onmicrosoft_com/EUJqJfojMwtMilqTonJmeoABp57gRp0UWzWlzdmo_xDLCA?download=1",sep = ";",enc = "latin1")
qtd_contatos_enviados <- contatos %>% dplyr::filter(CELULAR != "(44) 99890-6216") %>% dplyr::summarise(
qtd_filiais   = n(),
qtd_regionais = length(unique(Regional)),
qtd_dir       = qtd_regionais*3)
x1$`Qntd. Esperada` <- qtd_contatos_enviados %>% sum
lubridate::month(x2$dia)
lubridate::month(x2$dia) == lubridate::month(lubridate::today())
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
onedrive_url <- "https://crefaz-my.sharepoint.com/:x:/g/personal/gestaodedados4_crefaz_onmicrosoft_com/ESjlRAy5mzVJh3LRucNvoTYBa5x7ReX2691dJ-5uwaob4w?download=1"
df <- read_url_csv(onedrive_url,enc = "latin1")
df
library(janitor)
library(janitor)
df  %>%
clean_names()
#rm(list=ls())
library(shiny)
library(shinyWidgets)
library(shinydashboard)
library(shinydashboardPlus)
library(dplyr)
library(readxl)
library(stringr)
library(flexdashboard)
library(ggplot2)
library(plotly)
library(rmarkdown)
library(pagedown)
library(stringr)
library(RODBC)
library(RMySQL)
library(RMariaDB)
library(ggtext)
library(fresh)
library(shinyWidgets)
library(shinycssloaders)
library(DT)
library(reshape2)
library(plyr)
library(tidyverse)
#source(file = "funcoes.R",encoding = "UTF-8")
read_url_csv <- function(url, sep = ",",enc = "UTF-8"){
tmpFile <- tempfile()
download.file(url, destfile = tmpFile)
url_csv <- read.csv(tmpFile, sep = sep,encoding = enc)
return(url_csv)
}
read_url_xlsx <- function(url,sheet = "Calendario"){
tmpFile <- tempfile()
download.file(url, destfile = tmpFile)
url_csv <- read_xlsx(path = tmpFile,sheet = sheet)
return(url_csv)
}
library(readxl)
url <- "https://crefaz-my.sharepoint.com/:x:/g/personal/gestaodedados4_crefaz_onmicrosoft_com/EbsSsZPj4ntMvyRUG-0QYa4BTEQUCw8VXlCqTriyMQcYiw?download=1"
destfile <- "calendario.xlsx"
curl::curl_download(url, destfile)
calendario <- read_excel(destfile,sheet = "Calendario")
calendario         = calendario[c("Dia","Class Não Útil","Dia Útil2")]
colnames(calendario) <- c("Data","Dia_util","Dia_Util2")
calendario$Class_Dia <- is.na(calendario$Dia_util)
calendario$Data      <- as.Date(calendario$Data,format = "%d/%m/%Y")
calendario$Class_Dia <- ifelse(calendario$`Dia_Util2` == "Sábado",TRUE,calendario$Class_Dia)
onedrive_url <- "https://crefaz-my.sharepoint.com/:x:/g/personal/gestaodedados4_crefaz_onmicrosoft_com/ESjlRAy5mzVJh3LRucNvoTYBa5x7ReX2691dJ-5uwaob4w?download=1"
df <- read_url_csv(onedrive_url,enc = "latin1")
names_df          <- c("ID","Tipo","Pipeline", "Fase do negocio","Negocio Recorrente","Negocio Repetido","Contato Fonte","Modificado por ID","Criado por","Pessoa reponsavel ID",
"Data prevista de fechamento","Data de inicio","Valor do emprestimo","Origem do Cliente","Data exportacao","Contato","Grupo de fase" ,
"Base","Produto Crefaz", "Fase automacao",  "Data negociar","Data analisar", "Data prospectar","Modificado em","Desafio","Desafio retencao","primeira_resposta_do_cliente",
"resposta_do_cliente","cpf","retrabalho_desafio","ID_users" , "COD_PR",  "Nomes.e.sobrenomes" ,   "Lojas" ,  "Regional" ,   "active"  ,"Origem do Cliente1",   "Data fechado" ,  "Data criado"
)
# library(janitor)
# df  %>%
#   clean_names()
#
# colnames(df) <- names_df
# df$`Fase do negocio` <- ifelse(df$`Fase do negocio` == "EM ANÃ\u0081LISE","EM ANÁLISE",df$`Fase do negocio`)
# df$`Pessoa reponsavel ID`          <- as.character(df$`Pessoa reponsavel ID` )
#
# onedrive_url <- "https://crefaz-my.sharepoint.com/:x:/g/personal/gestaodedados4_crefaz_onmicrosoft_com/EZXxlt-n_LxOnG4KTsPLxaIBVslbvDa-2z7_1_-0Y3B1NQ?download=1"
#
# users             <- read_url_csv(onedrive_url,sep = ";",enc = "latin1")
# users$ID          <- as.character(users$ID)
#
# library(readxl)
# url <- "https://crefaz-my.sharepoint.com/:x:/g/personal/gestaodedados4_crefaz_onmicrosoft_com/EaODUUKwdOFJtbyx6MQHshsBjMAYRqYYyXr-el08rDnpxQ?download=1"
# destfile <- "regionais.xlsx"
# curl::curl_download(url, destfile)
# regionais <- read_excel(destfile,sheet = "Planilha1")
#
#
#
#
# df                <- left_join(x = df,y = users,by=c("Pessoa reponsavel ID"="ID"),keep=TRUE,suffix = c("_LEADS","_users"))
# #df                <- left_join(x = df,y = regionais,by=c("Departamento"="Departamento"),keep=TRUE,suffix = c("_LEADS","_reg"))
# colnames(df)[colnames(df) == "Departamento"] <- "Lojas"
#
#
# df                <- df %>% filter(str_detect(string = Lojas,pattern = "Loja CFZ"))
#
#
#
# df$Regional       <- str_replace(string = df$Regional,pattern = "Super. ES 2 Lojas CFZ",replacement = "Supervisao ES Lojas CFZ")
# df$Regional       <- str_replace(string = df$Regional,pattern = "Super. RJ e ES Lojas CFZ",replacement = "MAYSA CARVALHO")
# df$Regional       <- str_replace(string = df$Regional,pattern = "Super. RS Lojas CFZ",replacement = "WAGNER RIBEIRO")
# df$Regional       <- str_replace(string = df$Regional,pattern = "Super. CE lojas CFZ",replacement = "GILBERTO FELICIO")
# df$Regional       <- str_replace(string = df$Regional,pattern = "Super. Lojas SC",replacement = "SC")
# df$Regional       <- str_replace(string = df$Regional,pattern = "Sup. Estadual Eliana",replacement = "ELIANA PORRINO")
# df$Regional       <- str_replace(string = df$Regional,pattern = "Regional Yrlon",replacement = "YRLON ALVES")
# df$Regional       <- str_replace(string = df$Regional,pattern = "Regional Mirele",replacement = "MIRELE DUARTE")
# df$Regional       <- str_replace(string = df$Regional,pattern = "Regional Helen",replacement = "HELEN CAROLINA")
# df$Regional       <- str_replace(string = df$Regional,pattern = "Regional Dejamile",replacement = "DEJAMILE SOUZA")
# df$Regional       <- str_replace(string = df$Regional,pattern = "Regional Igor",replacement = "IGOR ASSIS")
#
#
#
# df                <- df %>% mutate("Fase do negocio" = ifelse(`Fase do negocio` == "PAGO AO CLIENTE","PAGO",`Fase do negocio`))
# df                <- df %>% mutate("Fase do negocio" = ifelse(`Fase do negocio` == "EM ANÁLISE","EM ANÁLISE",`Fase do negocio`))
# # df                <- df %>% mutate("Origem do Cliente"  = ifelse(`Origem do Cliente` == "","Não identificada",`Origem do Cliente`),
# #                                    "Fonte"              = ifelse(`Contato Fonte` =="",`Lead Fonte`,`Contato Fonte`),
# #                                    "Origem do Cliente1" = ifelse(`Origem do Cliente` == "Fonte" & `Contato Fonte` == "" & `Lead Fonte` == "","Fonte (erro de tabulação)",ifelse(Fonte != "","Fonte",`Origem do Cliente`)),
# #                                    "Data fechado"       = ifelse(Fechado == "Sim",`Data prevista de fechamento`, NA),
# #                                    "Data criado"        = ifelse(`Origem do Cliente1` == "Fonte"| `Origem do Cliente1` =="Não identificada",NA,`Criado em`))
#
# df                <- df %>% mutate("Origem do Cliente"  = ifelse(`Origem do Cliente` == "" | is.na(`Origem do Cliente`) | `Origem do Cliente` == "NA"  ,"Não identificada",`Origem do Cliente`),
#                                    # "Fonte"              = ifelse(`Contato Fonte` =="",`Lead Fonte`,`Contato Fonte`),
#                                    "Origem do Cliente1" = ifelse(!is.na(`Contato Fonte`) ,"Fonte", `Origem do Cliente`),
#                                    "Data fechado"       = ifelse(`Fase do negocio` == "PAGO" | `Fase do negocio` == "DESAFIO",`Data prevista de fechamento`, NA),
#                                    "Data criado"        = ifelse(`Origem do Cliente1` == "Fonte" | `Origem do Cliente1` =="Não identificada",NA,`Data de inicio`))
#
#
#
# #df$`Criado em`         <- as.Date(df$`Criado em`,format = "%d/%m/%Y")
# df$`Data fechado`       <- lubridate::as_date(df$`Data fechado` , format = "%Y-%m-%d %H:%M:%S")
# df$`Data analisar`      <- lubridate::as_date(df$`Data analisar`, format = "%Y-%m-%d %H:%M:%S")
# df$`Data criado`        <- lubridate::as_date(df$`Data criado`, format = "%Y-%m-%d %H:%M:%S")
# df$`Data negociar`      <- lubridate::as_date(df$`Data negociar`, format = "%Y-%m-%d %H:%M:%S")
# df$`Data prospectar`    <- lubridate::as_date(df$`Data prospectar`, format = "%Y-%m-%d %H:%M:%S")
# df$`Data de inicio`     <- lubridate::as_date(df$`Data de inicio`, format = "%Y-%m-%d %H:%M:%S")
# df$`Modificado em`      <- lubridate::as_date(df$`Modificado em` , format = "%Y-%m-%d %H:%M:%S")
df1 <- df
runApp()
#rm(list=ls())
library(shiny)
library(shinyWidgets)
library(shinydashboard)
library(shinydashboardPlus)
library(dplyr)
library(readxl)
library(stringr)
library(flexdashboard)
library(ggplot2)
library(plotly)
library(rmarkdown)
library(pagedown)
library(stringr)
library(RODBC)
library(RMySQL)
library(RMariaDB)
library(ggtext)
library(fresh)
library(shinyWidgets)
library(shinycssloaders)
library(DT)
library(reshape2)
library(plyr)
library(tidyverse)
#source(file = "funcoes.R",encoding = "UTF-8")
read_url_csv <- function(url, sep = ",",enc = "UTF-8"){
tmpFile <- tempfile()
download.file(url, destfile = tmpFile)
url_csv <- read.csv(tmpFile, sep = sep,encoding = enc)
return(url_csv)
}
read_url_xlsx <- function(url,sheet = "Calendario"){
tmpFile <- tempfile()
download.file(url, destfile = tmpFile)
url_csv <- read_xlsx(path = tmpFile,sheet = sheet)
return(url_csv)
}
library(readxl)
url <- "https://crefaz-my.sharepoint.com/:x:/g/personal/gestaodedados4_crefaz_onmicrosoft_com/EbsSsZPj4ntMvyRUG-0QYa4BTEQUCw8VXlCqTriyMQcYiw?download=1"
destfile <- "calendario.xlsx"
curl::curl_download(url, destfile)
calendario <- read_excel(destfile,sheet = "Calendario")
calendario         = calendario[c("Dia","Class Não Útil","Dia Útil2")]
colnames(calendario) <- c("Data","Dia_util","Dia_Util2")
calendario$Class_Dia <- is.na(calendario$Dia_util)
calendario$Data      <- as.Date(calendario$Data,format = "%d/%m/%Y")
calendario$Class_Dia <- ifelse(calendario$`Dia_Util2` == "Sábado",TRUE,calendario$Class_Dia)
onedrive_url <- "https://crefaz-my.sharepoint.com/:x:/g/personal/gestaodedados4_crefaz_onmicrosoft_com/ESjlRAy5mzVJh3LRucNvoTYBa5x7ReX2691dJ-5uwaob4w?download=1"
df <- read_url_csv(onedrive_url,enc = "latin1")
names_df          <- c("ID","Tipo","Pipeline", "Fase do negocio","Negocio Recorrente","Negocio Repetido","Contato Fonte","Modificado por ID","Criado por","Pessoa reponsavel ID",
"Data prevista de fechamento","Data de inicio","Valor do emprestimo","Origem do Cliente","Data exportacao","Contato","Grupo de fase" ,
"Base","Produto Crefaz", "Fase automacao",  "Data negociar","Data analisar", "Data prospectar","Modificado em","Desafio","Desafio retencao","primeira_resposta_do_cliente",
"resposta_do_cliente","cpf","retrabalho_desafio","ID_users" , "COD_PR",  "Nomes.e.sobrenomes" ,   "Lojas" ,  "Regional" ,   "active"  ,"Origem do Cliente1",   "Data fechado" ,  "Data criado"
)
View(df_melt)
View(df)
#rm(list=ls())
library(shiny)
library(shinyWidgets)
library(shinydashboard)
library(shinydashboardPlus)
library(dplyr)
library(readxl)
library(stringr)
library(flexdashboard)
library(ggplot2)
library(plotly)
library(rmarkdown)
library(pagedown)
library(stringr)
library(RODBC)
library(RMySQL)
library(RMariaDB)
library(ggtext)
library(fresh)
library(shinyWidgets)
library(shinycssloaders)
library(DT)
library(reshape2)
library(plyr)
library(tidyverse)
#source(file = "funcoes.R",encoding = "UTF-8")
read_url_csv <- function(url, sep = ",",enc = "UTF-8"){
tmpFile <- tempfile()
download.file(url, destfile = tmpFile)
url_csv <- read.csv(tmpFile, sep = sep,encoding = enc)
return(url_csv)
}
read_url_xlsx <- function(url,sheet = "Calendario"){
tmpFile <- tempfile()
download.file(url, destfile = tmpFile)
url_csv <- read_xlsx(path = tmpFile,sheet = sheet)
return(url_csv)
}
library(readxl)
url <- "https://crefaz-my.sharepoint.com/:x:/g/personal/gestaodedados4_crefaz_onmicrosoft_com/EbsSsZPj4ntMvyRUG-0QYa4BTEQUCw8VXlCqTriyMQcYiw?download=1"
destfile <- "calendario.xlsx"
curl::curl_download(url, destfile)
calendario <- read_excel(destfile,sheet = "Calendario")
calendario         = calendario[c("Dia","Class Não Útil","Dia Útil2")]
colnames(calendario) <- c("Data","Dia_util","Dia_Util2")
calendario$Class_Dia <- is.na(calendario$Dia_util)
calendario$Data      <- as.Date(calendario$Data,format = "%d/%m/%Y")
calendario$Class_Dia <- ifelse(calendario$`Dia_Util2` == "Sábado",TRUE,calendario$Class_Dia)
onedrive_url <- "https://crefaz-my.sharepoint.com/:x:/g/personal/gestaodedados4_crefaz_onmicrosoft_com/ESjlRAy5mzVJh3LRucNvoTYBa5x7ReX2691dJ-5uwaob4w?download=1"
df <- read_url_csv(onedrive_url,enc = "latin1")
names_df          <- c("ID","Tipo","Pipeline", "Fase do negocio","Negocio Recorrente","Negocio Repetido","Contato Fonte","Modificado por ID","Criado por","Pessoa reponsavel ID",
"Data prevista de fechamento","Data de inicio","Valor do emprestimo","Origem do Cliente","Data exportacao","Contato","Grupo de fase" ,
"Base","Produto Crefaz", "Fase automacao",  "Data negociar","Data analisar", "Data prospectar","Modificado em","Desafio","Desafio retencao","primeira_resposta_do_cliente",
"resposta_do_cliente","cpf","retrabalho_desafio","ID_users" , "COD_PR",  "Nomes.e.sobrenomes" ,   "Lojas" ,  "Regional" ,   "active"  ,"Origem do Cliente1",   "Data fechado" ,  "Data criado"
)
colnames(df) <- names_df
# library(janitor)
# df  %>%
#   clean_names()
#
# df$`Fase do negocio` <- ifelse(df$`Fase do negocio` == "EM ANÃ\u0081LISE","EM ANÁLISE",df$`Fase do negocio`)
# df$`Pessoa reponsavel ID`          <- as.character(df$`Pessoa reponsavel ID` )
#
# onedrive_url <- "https://crefaz-my.sharepoint.com/:x:/g/personal/gestaodedados4_crefaz_onmicrosoft_com/EZXxlt-n_LxOnG4KTsPLxaIBVslbvDa-2z7_1_-0Y3B1NQ?download=1"
#
# users             <- read_url_csv(onedrive_url,sep = ";",enc = "latin1")
# users$ID          <- as.character(users$ID)
#
# library(readxl)
# url <- "https://crefaz-my.sharepoint.com/:x:/g/personal/gestaodedados4_crefaz_onmicrosoft_com/EaODUUKwdOFJtbyx6MQHshsBjMAYRqYYyXr-el08rDnpxQ?download=1"
# destfile <- "regionais.xlsx"
# curl::curl_download(url, destfile)
# regionais <- read_excel(destfile,sheet = "Planilha1")
#
#
#
#
# df                <- left_join(x = df,y = users,by=c("Pessoa reponsavel ID"="ID"),keep=TRUE,suffix = c("_LEADS","_users"))
# #df                <- left_join(x = df,y = regionais,by=c("Departamento"="Departamento"),keep=TRUE,suffix = c("_LEADS","_reg"))
# colnames(df)[colnames(df) == "Departamento"] <- "Lojas"
#
#
# df                <- df %>% filter(str_detect(string = Lojas,pattern = "Loja CFZ"))
#
#
#
# df$Regional       <- str_replace(string = df$Regional,pattern = "Super. ES 2 Lojas CFZ",replacement = "Supervisao ES Lojas CFZ")
# df$Regional       <- str_replace(string = df$Regional,pattern = "Super. RJ e ES Lojas CFZ",replacement = "MAYSA CARVALHO")
# df$Regional       <- str_replace(string = df$Regional,pattern = "Super. RS Lojas CFZ",replacement = "WAGNER RIBEIRO")
# df$Regional       <- str_replace(string = df$Regional,pattern = "Super. CE lojas CFZ",replacement = "GILBERTO FELICIO")
# df$Regional       <- str_replace(string = df$Regional,pattern = "Super. Lojas SC",replacement = "SC")
# df$Regional       <- str_replace(string = df$Regional,pattern = "Sup. Estadual Eliana",replacement = "ELIANA PORRINO")
# df$Regional       <- str_replace(string = df$Regional,pattern = "Regional Yrlon",replacement = "YRLON ALVES")
# df$Regional       <- str_replace(string = df$Regional,pattern = "Regional Mirele",replacement = "MIRELE DUARTE")
# df$Regional       <- str_replace(string = df$Regional,pattern = "Regional Helen",replacement = "HELEN CAROLINA")
# df$Regional       <- str_replace(string = df$Regional,pattern = "Regional Dejamile",replacement = "DEJAMILE SOUZA")
# df$Regional       <- str_replace(string = df$Regional,pattern = "Regional Igor",replacement = "IGOR ASSIS")
#
#
#
# df                <- df %>% mutate("Fase do negocio" = ifelse(`Fase do negocio` == "PAGO AO CLIENTE","PAGO",`Fase do negocio`))
# df                <- df %>% mutate("Fase do negocio" = ifelse(`Fase do negocio` == "EM ANÁLISE","EM ANÁLISE",`Fase do negocio`))
# # df                <- df %>% mutate("Origem do Cliente"  = ifelse(`Origem do Cliente` == "","Não identificada",`Origem do Cliente`),
# #                                    "Fonte"              = ifelse(`Contato Fonte` =="",`Lead Fonte`,`Contato Fonte`),
# #                                    "Origem do Cliente1" = ifelse(`Origem do Cliente` == "Fonte" & `Contato Fonte` == "" & `Lead Fonte` == "","Fonte (erro de tabulação)",ifelse(Fonte != "","Fonte",`Origem do Cliente`)),
# #                                    "Data fechado"       = ifelse(Fechado == "Sim",`Data prevista de fechamento`, NA),
# #                                    "Data criado"        = ifelse(`Origem do Cliente1` == "Fonte"| `Origem do Cliente1` =="Não identificada",NA,`Criado em`))
#
# df                <- df %>% mutate("Origem do Cliente"  = ifelse(`Origem do Cliente` == "" | is.na(`Origem do Cliente`) | `Origem do Cliente` == "NA"  ,"Não identificada",`Origem do Cliente`),
#                                    # "Fonte"              = ifelse(`Contato Fonte` =="",`Lead Fonte`,`Contato Fonte`),
#                                    "Origem do Cliente1" = ifelse(!is.na(`Contato Fonte`) ,"Fonte", `Origem do Cliente`),
#                                    "Data fechado"       = ifelse(`Fase do negocio` == "PAGO" | `Fase do negocio` == "DESAFIO",`Data prevista de fechamento`, NA),
#                                    "Data criado"        = ifelse(`Origem do Cliente1` == "Fonte" | `Origem do Cliente1` =="Não identificada",NA,`Data de inicio`))
#
#
#
# #df$`Criado em`         <- as.Date(df$`Criado em`,format = "%d/%m/%Y")
# df$`Data fechado`       <- lubridate::as_date(df$`Data fechado` , format = "%Y-%m-%d %H:%M:%S")
# df$`Data analisar`      <- lubridate::as_date(df$`Data analisar`, format = "%Y-%m-%d %H:%M:%S")
# df$`Data criado`        <- lubridate::as_date(df$`Data criado`, format = "%Y-%m-%d %H:%M:%S")
# df$`Data negociar`      <- lubridate::as_date(df$`Data negociar`, format = "%Y-%m-%d %H:%M:%S")
# df$`Data prospectar`    <- lubridate::as_date(df$`Data prospectar`, format = "%Y-%m-%d %H:%M:%S")
# df$`Data de inicio`     <- lubridate::as_date(df$`Data de inicio`, format = "%Y-%m-%d %H:%M:%S")
# df$`Modificado em`      <- lubridate::as_date(df$`Modificado em` , format = "%Y-%m-%d %H:%M:%S")
df1 <- df
View(df)
runApp()
data = df1
Total <- sum
#as.character(input$visao)
table <- table(data[,c(group_count)],data$`Fase do negocio`)  %>% as.data.frame
Total <- sum
dados <- data %>% dplyr::select(`Data criado`,`Data prospectar`, `Data fechado`, `Data analisar`, `Data negociar`,ID_LEADS) %>%
reshape2::melt(id.vars = "ID_LEADS",measure.vars = c("Data criado","Data prospectar","Data fechado", "Data analisar", "Data negociar")) %>%
mutate("Atributo"      = ifelse(variable == "Data criado","Criou Lead",
ifelse(variable == "Data prospectar","Moveu para prospectando",
ifelse(variable == "Data negociar","Moveu para negociando",
ifelse(variable == "Data analisar","Moveu para em análise",
ifelse(variable == "Data fechado","Fechou lead(Desafio ou pago)",variable))))))
View(df)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
lubridate::today() - 1
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
