dplyr::summarise(Producao = sum(VLR_PRODUCAO),Qntd     =sum(Qntd_Propostas)) %>%
dplyr::select(ANO_PAGAMENTO,MES_PAGAMENTO,Producao) %>% dplyr::mutate(ANOMES = paste0(ANO_PAGAMENTO,"-",MES_PAGAMENTO)) %>% as.data.frame
df_1$ANOMES <- as.Date(paste(df_1$ANOMES,"-01",sep=""))
df_1      <- df_1 %>% dplyr::select(c("Producao","ANOMES"))  %>% tidyr::complete(ANOMES)
df_res <- reservados %>%  dplyr::group_by(ANO_PAGAMENTO,MES_PAGAMENTO) %>%
dplyr::summarise(Producao = sum(VLR_PRODUCAO),Qntd     =sum(Qntd_Propostas)) %>%
dplyr::select(ANO_PAGAMENTO,MES_PAGAMENTO,Producao) %>% dplyr::mutate(ANOMES = paste0(ANO_PAGAMENTO,"-",MES_PAGAMENTO)) %>% as.data.frame
df_res$ANOMES <- as.Date(paste(df_res$ANOMES,"-01",sep=""))
df_res      <- df_res %>% dplyr::select(c("Producao","ANOMES"))
df_res
df_1
producao_st   <- ts(data = df_1$Producao,frequency = 12,start = c(2018))
df_1$ANOMES %>% range
#producao           <- zoo(log(producao_df$Producao)  ,producao_df$DATA_PAGAMENTO)
Producao_Holt      = holt(producao_st,level = .95,h = 8)
#producao           <- zoo(log(producao_df$Producao)  ,producao_df$DATA_PAGAMENTO)
Producao_Holt      = holt(producao_st,level = .95,h = 7)
Producao_SES       = ses(producao_st,level = .95,h = 7)
fit.auto           = auto.arima(producao_st)
fit.auto$fitted
metrics_names = c("$\\hat{x}_{t}(1)$","$\\hat{x}_{t}(2)$","$\\hat{x}_{t}(3)$","$\\hat{x}_{t}(4)$","$\\hat{x}_{t}(5)$","$\\hat{x}_{t}(6)$")
rnames <- c("SE de Holt" , "Auto","Original")
data_res <- as.data.frame(t(cbind(
X1 = as.vector(Producao_Holt$mean),
X2 = as.vector(predict(fitauto,n.ahead = 8)$pred),
Original = df_res$Producao
)),row.names = rnames)
data_res <- as.data.frame(t(cbind(
X1 = as.vector(Producao_Holt$mean),
X2 = as.vector(predict(fitauto,n.ahead = 7)$pred),
Original = df_res$Producao
)),row.names = rnames)
df_pago$DATA_PAGAMENTO %>% range
producao_df <- df_1 %>% mutate(`Ajuste Holt(Producao)`     = Producao_Holt$fitted,
`Ajuste SES(Producao)`      = Producao_SES$fitted)
df1 <- data.frame(Data = c(df_1$ANOMES,df_res$ANOMES),
Producao = c(df_1$Producao,df_res$Producao),
`Ajuste Holt(Producao)`     = c(Producao_Holt$fitted,Producao_Holt$mean),
`Ajuste SES(Producao)`      = c(Producao_SES$fitted,Producao_SES$mean),
`Auto Arima`                = c(fitauto$fitted,predict(fitauto,n.ahead = 8)$pred)) %>%
dplyr::rename(`Ajuste Holt(Diesel)` = Ajuste.Holt.Producao.,
`Ajuste SES(Diesel)` = Ajuste.SES.Producao.,
`Auto Arima`   =  `Auto.Arima`)
df1 <- data.frame(Data = c(df_1$ANOMES,df_res$ANOMES),
Producao = c(df_1$Producao,df_res$Producao),
`Ajuste Holt(Producao)`     = c(Producao_Holt$fitted,Producao_Holt$mean),
`Ajuste SES(Producao)`      = c(Producao_SES$fitted,Producao_SES$mean),
`Auto Arima`                = c(fitauto$fitted,predict(fitauto,n.ahead = 7)$pred)) %>%
dplyr::rename(`Ajuste Holt(Diesel)` = Ajuste.Holt.Producao.,
`Ajuste SES(Diesel)` = Ajuste.SES.Producao.,
`Auto Arima`   =  `Auto.Arima`)
data_res
data_res <- as.data.frame(t(cbind(
X1 = as.vector(Producao_SES$mean),
X2 = as.vector(Producao_Holt$mean),
X3 = as.vector(predict(fitauto,n.ahead = 7)$pred),
Original = df_res$Producao
)),row.names = rnames)
data_res
df1 <- data.frame(Data = c(df_1$ANOMES,df_res$ANOMES),
Producao = c(df_1$Producao,df_res$Producao),
`Ajuste Holt(Producao)`     = c(Producao_Holt$fitted,Producao_Holt$mean),
`Ajuste SES(Producao)`      = c(Producao_SES$fitted,Producao_SES$mean),
`Auto Arima`                = c(fitauto$fitted,predict(fitauto,n.ahead = 7)$pred)) %>%
dplyr::rename(`Ajuste Holt(Diesel)` = Ajuste.Holt.Producao.,
`Ajuste SES(Diesel)` = Ajuste.SES.Producao.,
`Auto Arima`   =  `Auto.Arima`)
c(df_1$ANOMES,df_res$ANOMES)
c(df_1$Producao,df_res$Producao)
c(Producao_Holt$fitted,Producao_Holt$mean)
c(Producao_SES$fitted,Producao_SES$mean)
c(fitauto$fitted,predict(fitauto,n.ahead = 7)$pred)
fit.auto           = auto.arima(producao_st)
fit.auto$fitted
#producao           <- zoo(log(producao_df$Producao)  ,producao_df$DATA_PAGAMENTO)
Producao_Holt      = holt(producao_st,level = .95,h = 7)
Producao_SES       = ses(producao_st,level = .95,h = 7)
fit.auto           = auto.arima(producao_st)
fit.auto$fitted
metrics_names = c("$\\hat{x}_{t}(1)$","$\\hat{x}_{t}(2)$","$\\hat{x}_{t}(3)$","$\\hat{x}_{t}(4)$","$\\hat{x}_{t}(5)$","$\\hat{x}_{t}(6)$")
rnames <- c("SE Simples", "SE de Holt" , "Auto","Original")
data_res <- as.data.frame(t(cbind(
X1 = as.vector(Producao_SES$mean),
X2 = as.vector(Producao_Holt$mean),
X3 = as.vector(predict(fitauto,n.ahead = 7)$pred),
Original = df_res$Producao
)),row.names = rnames)
df1 <- data.frame(Data = c(df_1$ANOMES,df_res$ANOMES),
Producao = c(df_1$Producao,df_res$Producao),
`Ajuste Holt(Producao)`     = c(Producao_Holt$fitted,Producao_Holt$mean),
`Ajuste SES(Producao)`      = c(Producao_SES$fitted,Producao_SES$mean),
`Auto Arima`                = c(fitauto$fitted,predict(fitauto,n.ahead = 7)$pred)) %>%
dplyr::rename(`Ajuste Holt(Diesel)` = Ajuste.Holt.Producao.,
`Ajuste SES(Diesel)` = Ajuste.SES.Producao.,
`Auto Arima`   =  `Auto.Arima`)
fitauto$fitted
df1 <- data.frame(Data = c(df_1$ANOMES,df_res$ANOMES),
Producao = c(df_1$Producao,df_res$Producao),
`Ajuste Holt(Producao)`     = c(Producao_Holt$fitted,Producao_Holt$mean),
`Ajuste SES(Producao)`      = c(Producao_SES$fitted,Producao_SES$mean),
`Auto Arima`                = c(fit.auto$fitted,predict(fit.auto,n.ahead = 7)$pred)) %>%
dplyr::rename(`Ajuste Holt(Diesel)` = Ajuste.Holt.Producao.,
`Ajuste SES(Diesel)` = Ajuste.SES.Producao.,
`Auto Arima`   =  `Auto.Arima`)
fit.auto$fitted
predict(fit.auto,n.ahead = 7)$pred)
predict(fit.auto,n.ahead = 7)$pred))
predict(fit.auto,n.ahead = 7)$pred
df1 <- data.frame(Data = c(df_1$ANOMES,df_res$ANOMES),
Producao = c(df_1$Producao,df_res$Producao),
`Ajuste Holt(Producao)`     = c(Producao_Holt$fitted,Producao_Holt$mean),
`Ajuste SES(Producao)`      = c(Producao_SES$fitted,Producao_SES$mean),
`Auto Arima`                = c(fit.auto$fitted,predict(fit.auto,n.ahead = 6)$pred)) %>%
dplyr::rename(`Ajuste Holt(Diesel)` = Ajuste.Holt.Producao.,
`Ajuste SES(Diesel)` = Ajuste.SES.Producao.,
`Auto Arima`   =  `Auto.Arima`)
df1 <- data.frame(Data = c(df_1$ANOMES,df_res$ANOMES),
Producao = c(df_1$Producao,df_res$Producao),
`Ajuste Holt(Producao)`     = c(Producao_Holt$fitted,Producao_Holt$mean),
`Ajuste SES(Producao)`      = c(Producao_SES$fitted,Producao_SES$mean),
`Auto Arima`                = c(fit.auto$fitted,predict(fit.auto,n.ahead = 7)$pred)) %>%
dplyr::rename(`Ajuste Holt(Diesel)` = Ajuste.Holt.Producao.,
`Ajuste SES(Diesel)` = Ajuste.SES.Producao.,
`Auto Arima`   =  `Auto.Arima`)
fit.auto
fit.auto,n.ahead = 7)$pred
library(aTSA)
library(fpp2)
fit.auto
predict(fitauto,n.ahead = 7)$pred
df_1 <- df_pago %>%  dplyr::group_by(ANO_PAGAMENTO,MES_PAGAMENTO) %>%
dplyr::summarise(Producao = sum(VLR_PRODUCAO),Qntd     =sum(Qntd_Propostas)) %>%
dplyr::select(ANO_PAGAMENTO,MES_PAGAMENTO,Producao) %>% dplyr::mutate(ANOMES = paste0(ANO_PAGAMENTO,"-",MES_PAGAMENTO)) %>% as.data.frame
df_1$ANOMES <- as.Date(paste(df_1$ANOMES,"-01",sep=""))
df_1      <- df_1 %>% dplyr::select(c("Producao","ANOMES"))  %>% tidyr::complete(ANOMES)
df_res <- reservados %>%  dplyr::group_by(ANO_PAGAMENTO,MES_PAGAMENTO) %>%
dplyr::summarise(Producao = sum(VLR_PRODUCAO),Qntd     =sum(Qntd_Propostas)) %>%
dplyr::select(ANO_PAGAMENTO,MES_PAGAMENTO,Producao) %>% dplyr::mutate(ANOMES = paste0(ANO_PAGAMENTO,"-",MES_PAGAMENTO)) %>% as.data.frame
df_res$ANOMES <- as.Date(paste(df_res$ANOMES,"-01",sep=""))
df_res      <- df_res %>% dplyr::select(c("Producao","ANOMES"))
producao_st   <- ts(data = df_1$Producao,frequency = 12,start = c(2018))
producao_st
#producao           <- zoo(log(producao_df$Producao)  ,producao_df$DATA_PAGAMENTO)
Producao_Holt      = holt(producao_st,level = .95,h = 7)
Producao_SES       = ses(producao_st,level = .95,h = 7)
fit.auto           = auto.arima(producao_st)
fit.auto
metrics_names = c("$\\hat{x}_{t}(1)$","$\\hat{x}_{t}(2)$","$\\hat{x}_{t}(3)$","$\\hat{x}_{t}(4)$","$\\hat{x}_{t}(5)$","$\\hat{x}_{t}(6)$")
rnames <- c("SE Simples", "SE de Holt" , "Auto","Original")
data_res <- as.data.frame(t(cbind(
X1 = as.vector(Producao_SES$mean),
X2 = as.vector(Producao_Holt$mean),
X3 = as.vector(predict(fit.auto,n.ahead = 7)$pred),
Original = df_res$Producao
)),row.names = rnames)
auto           = auto.arima(producao_st)
auto$fitted
metrics_names = c("$\\hat{x}_{t}(1)$","$\\hat{x}_{t}(2)$","$\\hat{x}_{t}(3)$","$\\hat{x}_{t}(4)$","$\\hat{x}_{t}(5)$","$\\hat{x}_{t}(6)$")
rnames <- c("SE Simples", "SE de Holt" , "Auto","Original")
data_res <- as.data.frame(t(cbind(
X1 = as.vector(Producao_SES$mean),
X2 = as.vector(Producao_Holt$mean),
X3 = as.vector(predict(auto,n.ahead = 7)$pred),
Original = df_res$Producao
)),row.names = rnames)
forecast(auto)
auto           = Arima(producao_st,order = c(1,1,1))
forecast(auto)
data_res <- as.data.frame(t(cbind(
X1 = as.vector(Producao_SES$mean),
X2 = as.vector(Producao_Holt$mean),
X3 = as.vector(predict(auto,n.ahead = 7)$pred),
Original = df_res$Producao
)),row.names = rnames)
data_res
auto           = Arima(producao_st,order = c(0,1,0))
forecast(auto)
metrics_names = c("$\\hat{x}_{t}(1)$","$\\hat{x}_{t}(2)$","$\\hat{x}_{t}(3)$","$\\hat{x}_{t}(4)$","$\\hat{x}_{t}(5)$","$\\hat{x}_{t}(6)$")
rnames <- c("SE Simples", "SE de Holt" , "Auto","Original")
data_res <- as.data.frame(t(cbind(
X1 = as.vector(Producao_SES$mean),
X2 = as.vector(Producao_Holt$mean),
X3 = as.vector(predict(auto,n.ahead = 7)$pred),
Original = df_res$Producao
)),row.names = rnames)
data_res
rm(list=ls())
rm(list=ls())
source(file = "funcoes.R",encoding = "UTF-8")
library(tidyverse)
library(knitr)
library(kableExtra)
library(caret)
library(aTSA)
library(fpp2)
library(zoo)
library(ggplot2)
library(MLmetrics)
library(klaR)
library(plotROC)
library(RColorBrewer)
library(zoo)
library(forecast)
library(GGally)
cores <- c(RColorBrewer::brewer.pal(9,name = "Set1"),RColorBrewer::brewer.pal(8,name = "Dark2"))
cores <- cores[-c(4,1)]
knitr::opts_chunk$set(echo = TRUE,warning= FALSE, message= FALSE,
out.width = "100%",fig.align = "center",size ="large",fig.height = 3.5)
color_pal = c(RColorBrewer::brewer.pal(n = 8,name = "Dark2")[c(2,3,5,6,7,8,9)],
RColorBrewer::brewer.pal(n = 8,name = "Set1"),
RColorBrewer::brewer.pal(n = 8,name = "Set2"))
df <- read.csv(file = "D:\\OneDrive - Crefaz Financiamentos e Investimentos\\dash_mis_dados\\motor\\motor-agregadado.csv")
df$DATACADASTRO <- lubridate::as_date(df$DATACADASTRO)
df$DATA_PAGAMENTO <- lubridate::as_date(df$DATA_PAGAMENTO)
df$ANO_CADASTRO <- lubridate::year(df$DATACADASTRO)
df$ANO_PAGAMENTO <- lubridate::year(df$DATA_PAGAMENTO)
df$MES_CADASTRO <- lubridate::month(df$DATACADASTRO)
df$MES_PAGAMENTO <- lubridate::month(df$DATA_PAGAMENTO)
df_pago <- df %>% dplyr::filter(STATUS_PRINCIPAL == "PAGO AO CLIENTE")  %>% dplyr::filter(DATA_PAGAMENTO > "2018-01-01")
n = nrow(df_pago)
pos_na <- is.na(df_pago$DATA_PAGAMENTO ) %>% which
df_pago[pos_na,"DATA_PAGAMENTO"] <- df_pago[pos_na,"DATACADASTRO"]
df_pago$DATA_PAGAMENTO %>% range
as.Date(max(df_pago$DATA_PAGAMENTO,na.rm = TRUE)) - 120
library(zoo)
f_data <- as.Date(max(df_pago$DATA_PAGAMENTO,na.rm = TRUE)) - 120
f_data <- as.Date(paste(format(f_data,"%Y-%m"),"-01",sep=""))
reservados   <- df_pago %>% dplyr::filter(DATA_PAGAMENTO >= f_data)
df_pago      <- df_pago %>% dplyr::filter(DATA_PAGAMENTO < f_data)
library(lubridate)
library(tidyverse)
########################### CORRELOGRAMA ###############################
df_pago$SEMANA <- floor_date(df_pago$DATA_PAGAMENTO, "1 week")
df_pago$SEMANA2 <- format(df_pago$SEMANA, "%Y-%V")
reservados$SEMANA <- floor_date(reservados$DATA_PAGAMENTO, "1 week")
reservados$SEMANA2 <- format(df_pago$SEMANA, "%Y-%V")
teste <- df_pago %>%  group_by(year_week = floor_date(DATA_PAGAMENTO, "1 week"))
reservados$SEMANA %>% unique %>% sort
(lubridate::yday(df_pago$DATA_PAGAMENTO)-1)%/%7 + 1
df_1 <- df_pago %>%  dplyr::group_by(SEMANA) %>%
dplyr::summarise(Producao = sum(VLR_PRODUCAO),Qntd     =sum(Qntd_Propostas)) %>%
dplyr::select(SEMANA,Producao)
df_res <- reservados %>%   dplyr::group_by(SEMANA) %>%
dplyr::summarise(Producao = sum(VLR_PRODUCAO),Qntd     =sum(Qntd_Propostas)) %>%
dplyr::select(SEMANA,Producao)
producao   <- zoo(df_1$Producao  ,df_1$SEMANA)
p1 <- autoplot.zoo(producao) +
geom_line(size = 0.35,alpha=1,color="black")+
#geom_point() +
#geom_point(size = .3,alpha = 0.25,color="black") +
labs(x = "Data", y = "Produção") +
# scale_color_manual(values = color_pal) +
scale_x_date(date_breaks = "month",date_labels = "%V %Y")+
axis.theme(x.angle = 45,vjust = 1,hjust = 1,axis.title.size.x = 16,axis.title.size.y = 16,tick.size = 16)
producao   <- zoo(log(df_1$Producao)  ,df_1$SEMANA)
p2 <- autoplot.zoo(producao) +
geom_line(size = 0.35,alpha=1,color="black")+
#geom_point() +
#geom_point(size = .3,alpha = 0.25,color="black") +
labs(x = "Data", y = "Produção") +
# scale_color_manual(values = color_pal) +
scale_x_date(date_breaks = "month",date_labels = "%V %Y")+
axis.theme(x.angle = 45,vjust = 1,hjust = 1,axis.title.size.x = 16,axis.title.size.y = 16,tick.size = 16)
cowplot::plot_grid(p1, p2,ncol=1,nrow=2,labels = LETTERS[1:2],align = "v")
producao_df   <- zoo(log(df_1$Producao)  ,df_1$SEMANA)
p3 <- autoplot.zoo(diff(producao_df)) +
geom_line(size = 0.25,alpha=1,color="black")+
#geom_point(size = .3,alpha = 0.25,color="black") +
labs(x = "Data", y = "Produção") +
#scale_color_manual(values = color_pal) +
scale_x_date(date_breaks = "12 months",date_labels = "%Y")+
axis.theme(x.angle = 45,vjust = 1,hjust = 1,axis.title.size.x = 16,axis.title.size.y = 16,tick.size = 10)
as.zoo(producao_df)
pA1 <- ggAcf(as.data.frame(as.zoo(diff(producao_df)))$`as.zoo(diff(producao_df))`,type = "correlation",lag.max = 162)+
labs(x = "Lag", y = "FAC",title=NULL) +
axis.theme(axis.title.size.x = 16,axis.title.size.y = 16,tick.size = 16)
pB1 <- ggAcf(as.data.frame(as.zoo(diff(producao_df)))$`as.zoo(diff(producao_df))`,type = "partial",lag.max = 162)+
labs(x = "Lag", y = "FAC P",title=NULL) +
axis.theme(axis.title.size.x = 16,axis.title.size.y = 16,tick.size = 16)
parcial1 <- cowplot::plot_grid(p3,cowplot::plot_grid(pA1, pB1,ncol=1,nrow=2,labels = LETTERS[2:3],align = "v"),labels = LETTERS[1])
p4 <- autoplot.zoo(diff(diff(producao_df))) +
geom_line(size = 0.25,alpha=1,color="black")+
#geom_point(size = .3,alpha = 0.25,color="black") +
labs(x = "Data", y = "Produção") +
#scale_color_manual(values = color_pal) +
scale_x_date(date_breaks = "12 months",date_labels = "%Y")+
axis.theme(x.angle = 45,vjust = 1,hjust = 1,axis.title.size.x = 16,axis.title.size.y = 16,tick.size = 10)
as.zoo(producao_df)
pA2 <- ggAcf(as.data.frame(as.zoo(diff(diff(producao_df))))$`as.zoo(diff(diff(producao_df)))`,type = "correlation",lag.max = 162)+
labs(x = "Lag", y = "FAC",title=NULL) +
axis.theme(axis.title.size.x = 16,axis.title.size.y = 16,tick.size = 16)
pB2 <- ggAcf(as.data.frame(as.zoo(diff(diff(producao_df))))$`as.zoo(diff(diff(producao_df)))`,type = "partial",lag.max = 162)+
labs(x = "Lag", y = "FAC P",title=NULL) +
axis.theme(axis.title.size.x = 16,axis.title.size.y = 16,tick.size = 16)
parcial2 <- cowplot::plot_grid(p4,cowplot::plot_grid(pA2, pB2,ncol=1,nrow=2,labels = LETTERS[4:5],align = "v"),labels = LETTERS[3])
cowplot::plot_grid(parcial1,parcial2, ncol=1,nrow=2,align = "v")
Producao_Holt      = holt(producao_st,level = .95,h = 19)
Producao_SES       = ses(producao_st,level = .95,h = 19)
auto           = arima(producao_st,order = c(2,1,3),seasonal = list(order = c(1,0,0), period = 54))
#fitted(auto)
#auto.arima(producao_st)
# df_pago$SEMANA %>% unique %>% length
# df_res$SEMANA %>% unique %>% length
metrics_names = c("$\\hat{x}_{t}(1)$","$\\hat{x}_{t}(2)$","$\\hat{x}_{t}(3)$","$\\hat{x}_{t}(4)$","$\\hat{x}_{t}(5)$","$\\hat{x}_{t}(6)$")
rnames <- c("SE Simples", "SE de Holt" , "Auto","Original")
data_res <- as.data.frame(t(cbind(
X1 = as.vector(exp(Producao_SES$mean)),
X2 = as.vector(exp(Producao_Holt$mean)),
X3 = as.vector(exp(predict(auto,n.ahead = 19)$pred)),
Original = df_res$Producao
)),row.names = rnames)
library(aTSA)
library(fpp2)
df_pago$DATA_PAGAMENTO %>% range
producao_df <- df_1 %>% mutate(`Ajuste Holt(Producao)`     = Producao_Holt$fitted,
`Ajuste SES(Producao)`      = Producao_SES$fitted)
df1 <- data.frame(Data = c(df_1$SEMANA,df_res$SEMANA),
Producao = c(df_1$Producao,df_res$Producao),
`Ajuste Holt(Producao)`     = exp(c(Producao_Holt$fitted,Producao_Holt$mean)),
`Ajuste SES(Producao)`      = exp(c(Producao_SES$fitted,Producao_SES$mean)),
`Auto Arima`                = exp(c(fitted(auto),predict(auto,n.ahead = 19)$pred))) %>%
dplyr::rename(`Ajuste Holt(Producao)` = Ajuste.Holt.Producao.,
`Ajuste SES(Producao)` = Ajuste.SES.Producao.,
`Auto Arima`   =  `Auto.Arima`)
library(reshape2)
library(plotly)
df_producao <- df1 %>% dplyr::select(Data,Producao,`Ajuste Holt(Producao)`,`Ajuste SES(Producao)`,`Auto Arima`) %>% melt("Data") %>% dplyr::rename( Producao = value,Legenda = variable)
#df_producao$Producao <- log(df_producao$Producao)
#df_gasolina <- df %>% select(Data,Gasolina,`Ajuste Holt(Gasolina)`,`Ajuste SES(Gasolina)`) %>% melt("Data") %>% dplyr::rename( Preços = value,Legenda = variable)
p1 <- ggplot(data = df_producao, aes(x = Data, y = Producao, linetype = Legenda,color = Legenda)) +
geom_line(alpha=1,size = 0.85)+
#geom_line(data = df,aes(x = Data, y = `Ajuste Holt(Diesel)`),color = "red", lty = "dashed") +
#geom_point(size = .3,alpha = 0.25,color="black") +
labs(x = "Data", y = "Preço") +
scale_color_manual(values = c("black","red","green","purple")) +
scale_x_date(date_breaks = "12 months",date_labels = "%Y")+
axis.theme(x.angle = 45,vjust = 1,hjust = 1,axis.title.size.x = 12,axis.title.size.y = 12,tick.size = 8,lengend_title_size = 10,lengend_text_size = 8,pos_leg = "right")
ggplotly(p1) %>%
layout(showlegend = F, title='Time Series with Rangeslider',
xaxis = list(rangeslider = list(visible = T)))
df_producao <- df1 %>% dplyr::select(Data,Producao,`Ajuste Holt(Producao)`,`Ajuste SES(Producao)`,`Auto Arima`) %>% melt("Data") %>% dplyr::rename( Producao = value,Legenda = variable)
df1 <- data.frame(Data = c(df_1$SEMANA,df_res$SEMANA),
Producao = c(df_1$Producao,df_res$Producao),
`Ajuste Holt(Producao)`     = exp(c(Producao_Holt$fitted,Producao_Holt$mean)),
`Ajuste SES(Producao)`      = exp(c(Producao_SES$fitted,Producao_SES$mean)),
`Auto Arima`                = exp(c(fitted(auto),predict(auto,n.ahead = 19)$pred))) %>%
dplyr::rename(`Ajuste Holt(Producao)` = Ajuste.Holt.Producao.,
`Ajuste SES(Producao)` = Ajuste.SES.Producao.,
`Auto Arima`   =  `Auto.Arima`)
#producao           <- zoo(log(producao_df$Producao)  ,producao_df$DATA_PAGAMENTO)
Producao_Holt      = holt(producao_st,level = .95,h = 19)
producao_st   <- ts(data = log(df_1$Producao),frequency = 54,start = c(2018))
#producao           <- zoo(log(producao_df$Producao)  ,producao_df$DATA_PAGAMENTO)
Producao_Holt      = holt(producao_st,level = .95,h = 19)
Producao_SES       = ses(producao_st,level = .95,h = 19)
auto           = arima(producao_st,order = c(2,1,3),seasonal = list(order = c(1,0,0), period = 54))
# df_pago$SEMANA %>% unique %>% length
# df_res$SEMANA %>% unique %>% length
metrics_names = c("$\\hat{x}_{t}(1)$","$\\hat{x}_{t}(2)$","$\\hat{x}_{t}(3)$","$\\hat{x}_{t}(4)$","$\\hat{x}_{t}(5)$","$\\hat{x}_{t}(6)$")
rnames <- c("SE Simples", "SE de Holt" , "Auto","Original")
data_res <- as.data.frame(t(cbind(
X1 = as.vector(exp(Producao_SES$mean)),
X2 = as.vector(exp(Producao_Holt$mean)),
X3 = as.vector(exp(predict(auto,n.ahead = 19)$pred)),
Original = df_res$Producao
)),row.names = rnames)
library(aTSA)
library(fpp2)
df_pago$DATA_PAGAMENTO %>% range
producao_df <- df_1 %>% mutate(`Ajuste Holt(Producao)`     = Producao_Holt$fitted,
`Ajuste SES(Producao)`      = Producao_SES$fitted)
df1 <- data.frame(Data = c(df_1$SEMANA,df_res$SEMANA),
Producao = c(df_1$Producao,df_res$Producao),
`Ajuste Holt(Producao)`     = exp(c(Producao_Holt$fitted,Producao_Holt$mean)),
`Ajuste SES(Producao)`      = exp(c(Producao_SES$fitted,Producao_SES$mean)),
`Auto Arima`                = exp(c(fitted(auto),predict(auto,n.ahead = 19)$pred))) %>%
dplyr::rename(`Ajuste Holt(Producao)` = Ajuste.Holt.Producao.,
`Ajuste SES(Producao)` = Ajuste.SES.Producao.,
`Auto Arima`   =  `Auto.Arima`)
library(reshape2)
library(plotly)
df_producao <- df1 %>% dplyr::select(Data,Producao,`Ajuste Holt(Producao)`,`Ajuste SES(Producao)`,`Auto Arima`) %>% melt("Data") %>% dplyr::rename( Producao = value,Legenda = variable)
p1 <- ggplot(data = df_producao, aes(x = Data, y = Producao, linetype = Legenda,color = Legenda)) +
geom_line(alpha=1,size = 0.85)+
#geom_line(data = df,aes(x = Data, y = `Ajuste Holt(Diesel)`),color = "red", lty = "dashed") +
#geom_point(size = .3,alpha = 0.25,color="black") +
labs(x = "Data", y = "Preço") +
scale_color_manual(values = c("black","red","green","purple")) +
scale_x_date(date_breaks = "12 months",date_labels = "%Y")+
axis.theme(x.angle = 45,vjust = 1,hjust = 1,axis.title.size.x = 12,axis.title.size.y = 12,tick.size = 8,lengend_title_size = 10,lengend_text_size = 8,pos_leg = "right")
ggplotly(p1) %>%
layout(showlegend = F, title='Time Series with Rangeslider',
xaxis = list(rangeslider = list(visible = T)))
shiny::runApp()
url <- "https://crefaz-my.sharepoint.com/:x:/g/personal/gestaodedados4_crefaz_onmicrosoft_com/EbsSsZPj4ntMvyRUG-0QYa4BTEQUCw8VXlCqTriyMQcYiw?download=1"
destfile <- "calendario.xlsx"
curl::curl_download(url, destfile)
calendario <- read_excel(destfile,sheet = "Calendario")
calendario         = calendario[c("Dia","Class Não Útil","Dia Útil2")]
colnames(calendario) <- c("Data","Dia_util","Dia_Util2")
calendario$Class_Dia <- is.na(calendario$Dia_util)
calendario$Data      <- as.Date(calendario$Data,format = "%d/%m/%Y")
calendario$Class_Dia <- ifelse(calendario$`Dia_Util2` == "Sábado",TRUE,calendario$Class_Dia)
onedrive_url <- "https://crefaz-my.sharepoint.com/:x:/g/personal/gestaodedados4_crefaz_onmicrosoft_com/ESjlRAy5mzVJh3LRucNvoTYBa5x7ReX2691dJ-5uwaob4w?download=1"
df <- read_url_csv(onedrive_url,enc = "latin1")
names_df          <- c("ID","Tipo","Pipeline", "Fase do negocio","Negocio Recorrente","Negocio Repetido","Contato Fonte","Modificado por ID","Criado por","Pessoa reponsavel ID",
"Data prevista de fechamento","Data de inicio","Valor do emprestimo","Origem do Cliente","Data exportacao","Contato","Grupo de fase" ,
"Base","Produto Crefaz", "Fase automacao",  "Data negociar","Data analisar", "Data prospectar","Modificado em","Desafio","Desafio retencao","primeira_resposta_do_cliente",
"resposta_do_cliente","cpf","retrabalho_desafio"
)
#,"ID_users" , "COD_PR",  "Nomes.e.sobrenomes" ,   "Lojas" ,  "Regional" ,   "active"  ,"Origem do Cliente1",   "Data fechado" ,  "Data criado"
colnames(df) <- names_df
# library(janitor)
# df  %>%
#   clean_names()
#
df$`Fase do negocio` <- ifelse(df$`Fase do negocio` == "EM ANÃ\u0081LISE","EM ANÁLISE",df$`Fase do negocio`)
df$`Pessoa reponsavel ID`          <- as.character(df$`Pessoa reponsavel ID` )
onedrive_url <- "https://crefaz-my.sharepoint.com/:x:/g/personal/gestaodedados4_crefaz_onmicrosoft_com/EZXxlt-n_LxOnG4KTsPLxaIBVslbvDa-2z7_1_-0Y3B1NQ?download=1"
users             <- read_url_csv(onedrive_url,sep = ";",enc = "latin1")
users$ID          <- as.character(users$ID)
library(readxl)
url <- "https://crefaz-my.sharepoint.com/:x:/g/personal/gestaodedados4_crefaz_onmicrosoft_com/EaODUUKwdOFJtbyx6MQHshsBjMAYRqYYyXr-el08rDnpxQ?download=1"
destfile <- "regionais.xlsx"
curl::curl_download(url, destfile)
regionais <- read_excel(destfile,sheet = "Planilha1")
df                <- left_join(x = df,y = users,by=c("Pessoa reponsavel ID"="ID"),keep=TRUE,suffix = c("_LEADS","_users"))
#df                <- left_join(x = df,y = regionais,by=c("Departamento"="Departamento"),keep=TRUE,suffix = c("_LEADS","_reg"))
colnames(df)[colnames(df) == "Departamento"] <- "Lojas"
df                <- df %>% filter(str_detect(string = Lojas,pattern = "Loja CFZ"))
df$Regional       <- str_replace(string = df$Regional,pattern = "Super. ES 2 Lojas CFZ",replacement = "Supervisao ES Lojas CFZ")
df$Regional       <- str_replace(string = df$Regional,pattern = "Super. RJ Lojas CFZ",replacement = "Supervisao RJ Lojas CFZ")
df$Regional       <- str_replace(string = df$Regional,pattern = "Região São Paulo",replacement = "Supervisao SP Lojas CFZ")
df$Regional       <- str_replace(string = df$Regional,pattern = "Super. RS Lojas CFZ",replacement = "WAGNER RIBEIRO")
df$Regional       <- str_replace(string = df$Regional,pattern = "Regional Aline",replacement = "ALINE")
df$Regional       <- str_replace(string = df$Regional,pattern = "Super. CE lojas CFZ",replacement = "GILBERTO FELICIO")
df$Regional       <- str_replace(string = df$Regional,pattern = "Super. Lojas SC",replacement = "Supervisao SC Lojas CFZ")
#df$Regional       <- str_replace(string = df$Regional,pattern = "Sup. Estadual Eliana",replacement = "ELIANA PORRINO")
df$Regional       <- str_replace(string = df$Regional,pattern = "Regional Yrlon",replacement = "YRLON ALVES")
df$Regional       <- str_replace(string = df$Regional,pattern = "Regional Mirele",replacement = "MIRELE DUARTE")
df$Regional       <- str_replace(string = df$Regional,pattern = "Regional Helen",replacement = "HELEN CAROLINA")
df$Regional       <- str_replace(string = df$Regional,pattern = "Regional Dejamile",replacement = "DEJAMILE SOUZA")
df$Regional       <- str_replace(string = df$Regional,pattern = "Regional Igor",replacement = "IGOR ASSIS")
df                <- df %>% mutate("Fase do negocio" = ifelse(`Fase do negocio` == "PAGO AO CLIENTE","PAGO",`Fase do negocio`))
df                <- df %>% mutate("Fase do negocio" = ifelse(`Fase do negocio` == "EM ANÁLISE","EM ANÁLISE",`Fase do negocio`))
# df                <- df %>% mutate("Origem do Cliente"  = ifelse(`Origem do Cliente` == "","Não identificada",`Origem do Cliente`),
#                                    "Fonte"              = ifelse(`Contato Fonte` =="",`Lead Fonte`,`Contato Fonte`),
#                                    "Origem do Cliente1" = ifelse(`Origem do Cliente` == "Fonte" & `Contato Fonte` == "" & `Lead Fonte` == "","Fonte (erro de tabulação)",ifelse(Fonte != "","Fonte",`Origem do Cliente`)),
#                                    "Data fechado"       = ifelse(Fechado == "Sim",`Data prevista de fechamento`, NA),
#                                    "Data criado"        = ifelse(`Origem do Cliente1` == "Fonte"| `Origem do Cliente1` =="Não identificada",NA,`Criado em`))
df                <- df %>% mutate("Origem do Cliente"  = ifelse(`Origem do Cliente` == "" | is.na(`Origem do Cliente`) | `Origem do Cliente` == "NA"  ,"Não identificada",`Origem do Cliente`),
# "Fonte"              = ifelse(`Contato Fonte` =="",`Lead Fonte`,`Contato Fonte`),
"Origem do Cliente1" = ifelse(!is.na(`Contato Fonte`) ,"Fonte", `Origem do Cliente`),
"Data fechado"       = ifelse(`Fase do negocio` == "PAGO" | `Fase do negocio` == "DESAFIO",`Data prevista de fechamento`, NA),
"Data criado"        = ifelse(`Origem do Cliente1` == "Fonte" | `Origem do Cliente1` =="Não identificada",NA,`Data de inicio`))
#df$`Criado em`         <- as.Date(df$`Criado em`,format = "%d/%m/%Y")
df$`Data fechado`       <- lubridate::as_date(df$`Data fechado` , format = "%Y-%m-%d %H:%M:%S")
df$`Data analisar`      <- lubridate::as_date(df$`Data analisar`, format = "%Y-%m-%d %H:%M:%S")
df$`Data criado`        <- lubridate::as_date(df$`Data criado`, format = "%Y-%m-%d %H:%M:%S")
df$`Data negociar`      <- lubridate::as_date(df$`Data negociar`, format = "%Y-%m-%d %H:%M:%S")
df$`Data prospectar`    <- lubridate::as_date(df$`Data prospectar`, format = "%Y-%m-%d %H:%M:%S")
df$`Data de inicio`     <- lubridate::as_date(df$`Data de inicio`, format = "%Y-%m-%d %H:%M:%S")
df$`Modificado em`      <- lubridate::as_date(df$`Modificado em` , format = "%Y-%m-%d %H:%M:%S")
df1 <<- df
Total <- sum
dados <- data %>% dplyr::select(`Data criado`,`Data prospectar`, `Data fechado`, `Data analisar`, `Data negociar`,ID_LEADS) %>%
reshape2::melt(id.vars = "ID_LEADS",measure.vars = c("Data criado","Data prospectar","Data fechado", "Data analisar", "Data negociar")) %>%
mutate("Atributo"      = ifelse(variable == "Data criado","Criou Lead",
ifelse(variable == "Data prospectar","Moveu para prospectando",
ifelse(variable == "Data negociar","Moveu para negociando",
ifelse(variable == "Data analisar","Moveu para em análise",
ifelse(variable == "Data fechado","Fechou lead(Desafio ou pago)",variable))))))
library(dplyr)
Total <- sum
dados <- data %>% dplyr::select(`Data criado`,`Data prospectar`, `Data fechado`, `Data analisar`, `Data negociar`,ID_LEADS) %>%
reshape2::melt(id.vars = "ID_LEADS",measure.vars = c("Data criado","Data prospectar","Data fechado", "Data analisar", "Data negociar")) %>%
mutate("Atributo"      = ifelse(variable == "Data criado","Criou Lead",
ifelse(variable == "Data prospectar","Moveu para prospectando",
ifelse(variable == "Data negociar","Moveu para negociando",
ifelse(variable == "Data analisar","Moveu para em análise",
ifelse(variable == "Data fechado","Fechou lead(Desafio ou pago)",variable))))))
data = df1
Total <- sum
dados <- data %>% dplyr::select(`Data criado`,`Data prospectar`, `Data fechado`, `Data analisar`, `Data negociar`,ID_LEADS) %>%
reshape2::melt(id.vars = "ID_LEADS",measure.vars = c("Data criado","Data prospectar","Data fechado", "Data analisar", "Data negociar")) %>%
mutate("Atributo"      = ifelse(variable == "Data criado","Criou Lead",
ifelse(variable == "Data prospectar","Moveu para prospectando",
ifelse(variable == "Data negociar","Moveu para negociando",
ifelse(variable == "Data analisar","Moveu para em análise",
ifelse(variable == "Data fechado","Fechou lead(Desafio ou pago)",variable))))))
completedados <- dados[complete.cases(dados),]
dados               <- left_join(completedados,df1,by = c("ID_LEADS"))
dados   <- dados %>% dplyr::mutate("Atributo" = ifelse(Atributo == "Fechou lead(Desafio ou pago)",paste0("Moveu para ",`Fase do negocio`),Atributo))
dados               <- dados %>% filter(value == "2022-03-08")
total_movimentacoes <- dados %>%  nrow
table_movimentacoes <- table(dados$Atributo) %>% as.data.frame
if(nrow(table_movimentacoes) > 0){
resumo_movimentacoes           <- data.frame(mov = c("Criou Lead","Moveu para prospectando","Moveu para negociando","Moveu para em análise","Moveu para PAGO","Moveu para DESAFIO"), Qntd. = 0)
for(movimentacao in table_movimentacoes$Var1){
resumo_movimentacoes[resumo_movimentacoes$mov == movimentacao,"Qntd."] <- table_movimentacoes[table_movimentacoes$Var1 == movimentacao,"Freq"]
}
resumo_movimentacoes <- resumo_movimentacoes %>% mutate("%" = paste0(round( (`Qntd.`/total_movimentacoes)*100,2)," %"))
colnames(resumo_movimentacoes) <- c("Movimentação","Qtnd.","%")
resumo_movimentacoes
}else{
resumo_movimentacoes           <- data.frame(mov = c("Criou Lead","Moveu para prospectando","Moveu para negociando","Moveu para em análise","Moveu para PAGO","Moveu para DESAFIO"), Qntd. = 0,"%" = 0)
colnames(resumo_movimentacoes) <- c("Movimentação","Qtnd.","%")
resumo_movimentacoes
}
Total <- sum
table_movimentacoes <- table(dados[,input$visao],dados$Atributo) %>% as.data.frame
runApp()
