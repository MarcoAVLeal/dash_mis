p1 <- ggplot(data = df_melt,aes(x= dia, y = Envios,color = Legenda))+
geom_point(size = 1.2, alpha = 0.75)+
scale_color_manual(values = c("darkgreen", "darkred","darkblue")) +
# scale_x_continuous(breaks = seq(0,1*input$cut_renda1,0.05*input$cut_renda1))
# scale_y_continuous(breaks = seq(0,1,0.1))+
axis.theme(title_size = 12,textsize = 12,pos_leg = "bottom",x.angle = 45,vjust = 1,hjust=1)
p1
p1 <- ggplot(data = df_melt,aes(x= dia, y = Envios,color = Legenda))+
geom_point(size = 1.2, alpha = 0.75)+
geom_lines(size = 1.2, alpha = 0.75)+
scale_color_manual(values = c("darkgreen", "darkred","darkblue")) +
# scale_x_continuous(breaks = seq(0,1*input$cut_renda1,0.05*input$cut_renda1))
# scale_y_continuous(breaks = seq(0,1,0.1))+
axis.theme(title_size = 12,textsize = 12,pos_leg = "bottom",x.angle = 45,vjust = 1,hjust=1)
p1 <- ggplot(data = df_melt,aes(x= dia, y = Envios,color = Legenda))+
geom_point(size = 1.2, alpha = 0.75)+
geom_line(size = 1.2, alpha = 0.75)+
scale_color_manual(values = c("darkgreen", "darkred","darkblue")) +
# scale_x_continuous(breaks = seq(0,1*input$cut_renda1,0.05*input$cut_renda1))
# scale_y_continuous(breaks = seq(0,1,0.1))+
axis.theme(title_size = 12,textsize = 12,pos_leg = "bottom",x.angle = 45,vjust = 1,hjust=1)
p1
p1 <- ggplot(data = df_melt,aes(x= dia, y = Envios,color = Legenda,group = 1))+
geom_point(size = 1.2, alpha = 0.75)+
geom_line(size = 1.2, alpha = 0.75)+
scale_color_manual(values = c("darkgreen", "darkred","darkblue")) +
# scale_x_continuous(breaks = seq(0,1*input$cut_renda1,0.05*input$cut_renda1))
# scale_y_continuous(breaks = seq(0,1,0.1))+
axis.theme(title_size = 12,textsize = 12,pos_leg = "bottom",x.angle = 45,vjust = 1,hjust=1)
p1
p1 <- ggplot(data = df_melt,aes(x= dia, y = Envios,color = Legenda,group = 3))+
geom_point(size = 1.2, alpha = 0.75)+
geom_line(size = 1.2, alpha = 0.75)+
scale_color_manual(values = c("darkgreen", "darkred","darkblue")) +
# scale_x_continuous(breaks = seq(0,1*input$cut_renda1,0.05*input$cut_renda1))
# scale_y_continuous(breaks = seq(0,1,0.1))+
axis.theme(title_size = 12,textsize = 12,pos_leg = "bottom",x.angle = 45,vjust = 1,hjust=1)
p1
View(df_melt)
df_melt <- x1 %>% reshape2::melt(id.vars = "dia",measure.vars = c("total","pending","sent"),value.name = "Envios",variable.name= "Legenda")
df_melt$Legenda <- as.character(df_melt$Legenda)
p1 <- ggplot(data = df_melt,aes(x= dia, y = Envios,color = Legenda))+
geom_point(size = 1.2, alpha = 0.75)+
geom_line(size = 1.2, alpha = 0.75)+
scale_color_manual(values = c("darkgreen", "darkred","darkblue")) +
# scale_x_continuous(breaks = seq(0,1*input$cut_renda1,0.05*input$cut_renda1))
# scale_y_continuous(breaks = seq(0,1,0.1))+
axis.theme(title_size = 12,textsize = 12,pos_leg = "bottom",x.angle = 45,vjust = 1,hjust=1)
p1
p1 <- ggplot(data = df_melt,aes(x= dia, y = Envios,fill = Legenda))+
geom_point(size = 1.2, alpha = 0.75)+
geom_line(size = 1.2, alpha = 0.75)+
scale_color_manual(values = c("darkgreen", "darkred","darkblue")) +
# scale_x_continuous(breaks = seq(0,1*input$cut_renda1,0.05*input$cut_renda1))
# scale_y_continuous(breaks = seq(0,1,0.1))+
axis.theme(title_size = 12,textsize = 12,pos_leg = "bottom",x.angle = 45,vjust = 1,hjust=1)
p1
df_melt <- x1 %>% reshape2::melt(id.vars = "dia",measure.vars = c("total","pending","sent"),value.name = "Envios",variable.name= "Legenda")
df_melt$Legenda <- as.character(df_melt$Legenda)
p1 <- ggplot(data = df_melt,aes(x= dia, y = Envios))+
geom_point(size = 1.2, alpha = 0.75)+
geom_line(size = 1.2, alpha = 0.75aes(color = Legenda))+
scale_color_manual(values = c("darkgreen", "darkred","darkblue")) +
# scale_x_continuous(breaks = seq(0,1*input$cut_renda1,0.05*input$cut_renda1))
# scale_y_continuous(breaks = seq(0,1,0.1))+
axis.theme(title_size = 12,textsize = 12,pos_leg = "bottom",x.angle = 45,vjust = 1,hjust=1)
p1 <- ggplot(data = df_melt,aes(x= dia, y = Envios))+
geom_point(size = 1.2, alpha = 0.75)+
geom_line(size = 1.2, alpha = 0.75,aes(color = Legenda))+
scale_color_manual(values = c("darkgreen", "darkred","darkblue")) +
# scale_x_continuous(breaks = seq(0,1*input$cut_renda1,0.05*input$cut_renda1))
# scale_y_continuous(breaks = seq(0,1,0.1))+
axis.theme(title_size = 12,textsize = 12,pos_leg = "bottom",x.angle = 45,vjust = 1,hjust=1);p1
p1 <- ggplot(data = df_melt,aes(x= dia, y = Envios))+
geom_point(size = 1.2, alpha = 0.75)+
geom_line(size = 1.2, alpha = 0.75,aes(group = Legenda))+
scale_color_manual(values = c("darkgreen", "darkred","darkblue")) +
# scale_x_continuous(breaks = seq(0,1*input$cut_renda1,0.05*input$cut_renda1))
# scale_y_continuous(breaks = seq(0,1,0.1))+
axis.theme(title_size = 12,textsize = 12,pos_leg = "bottom",x.angle = 45,vjust = 1,hjust=1);p1
p1
p1 <- ggplot(data = df_melt,aes(x= dia, y = Envios))+
geom_point(size = 1.2, alpha = 0.75)+
geom_line(size = 1.2, alpha = 0.75,aes(fill = Legenda))+
scale_color_manual(values = c("darkgreen", "darkred","darkblue")) +
# scale_x_continuous(breaks = seq(0,1*input$cut_renda1,0.05*input$cut_renda1))
# scale_y_continuous(breaks = seq(0,1,0.1))+
axis.theme(title_size = 12,textsize = 12,pos_leg = "bottom",x.angle = 45,vjust = 1,hjust=1);p1
p1 <- ggplot(data = df_melt,aes(x= dia, y = Envios))+
geom_point(size = 1.2, alpha = 0.75)+
geom_line(size = 1.2, alpha = 0.75,aes(color = Legenda))+
scale_color_manual(values = c("darkgreen", "darkred","darkblue")) +
# scale_x_continuous(breaks = seq(0,1*input$cut_renda1,0.05*input$cut_renda1))
# scale_y_continuous(breaks = seq(0,1,0.1))+
axis.theme(title_size = 12,textsize = 12,pos_leg = "bottom",x.angle = 45,vjust = 1,hjust=1);p1
p1 <- ggplot(data = df_melt,aes(x= dia, y = Envios))+
geom_point(size = 1.2, alpha = 0.75)+
geom_path(size = 1.2, alpha = 0.75,aes(color = Legenda))+
scale_color_manual(values = c("darkgreen", "darkred","darkblue")) +
# scale_x_continuous(breaks = seq(0,1*input$cut_renda1,0.05*input$cut_renda1))
# scale_y_continuous(breaks = seq(0,1,0.1))+
axis.theme(title_size = 12,textsize = 12,pos_leg = "bottom",x.angle = 45,vjust = 1,hjust=1);p1
p1 <- ggplot(data = df_melt,aes(x= dia, y = Envios))+
geom_point(size = 1.2, alpha = 0.75)+
geom_path(size = 1.2, alpha = 0.75,aes(colour  = Legenda))+
scale_color_manual(values = c("darkgreen", "darkred","darkblue")) +
# scale_x_continuous(breaks = seq(0,1*input$cut_renda1,0.05*input$cut_renda1))
# scale_y_continuous(breaks = seq(0,1,0.1))+
axis.theme(title_size = 12,textsize = 12,pos_leg = "bottom",x.angle = 45,vjust = 1,hjust=1);p1
p1 <- ggplot(data = df_melt,aes(x= dia, y = Envios))+
geom_point(size = 1.2, alpha = 0.75)+
geom_lines(size = 1.2, alpha = 0.75,aes(colour  = Legenda))+
scale_color_manual(values = c("darkgreen", "darkred","darkblue")) +
# scale_x_continuous(breaks = seq(0,1*input$cut_renda1,0.05*input$cut_renda1))
# scale_y_continuous(breaks = seq(0,1,0.1))+
axis.theme(title_size = 12,textsize = 12,pos_leg = "bottom",x.angle = 45,vjust = 1,hjust=1);p1
p1 <- ggplot(data = df_melt,aes(x= dia, y = Envios))+
geom_point(size = 1.2, alpha = 0.75)+
geom_line(size = 1.2, alpha = 0.75,aes(colour  = Legenda))+
scale_color_manual(values = c("darkgreen", "darkred","darkblue")) +
# scale_x_continuous(breaks = seq(0,1*input$cut_renda1,0.05*input$cut_renda1))
# scale_y_continuous(breaks = seq(0,1,0.1))+
axis.theme(title_size = 12,textsize = 12,pos_leg = "bottom",x.angle = 45,vjust = 1,hjust=1);p1
p1 <- ggplot(data = df_melt,aes(x= dia, y = Envios))+
geom_point(size = 1.2, alpha = 0.75)+
geom_line(size = 1.2, alpha = 0.75,aes(colour  = Legenda,group = 3))+
scale_color_manual(values = c("darkgreen", "darkred","darkblue")) +
# scale_x_continuous(breaks = seq(0,1*input$cut_renda1,0.05*input$cut_renda1))
# scale_y_continuous(breaks = seq(0,1,0.1))+
axis.theme(title_size = 12,textsize = 12,pos_leg = "bottom",x.angle = 45,vjust = 1,hjust=1);p1
p1 <- ggplot(data = df_melt,aes(x= dia, y = Envios))+
geom_point(size = 1.2, alpha = 0.75)+
geom_line(size = 1.2, alpha = 0.75,aes(colour  = Legenda,group = "Legenda"))+
scale_color_manual(values = c("darkgreen", "darkred","darkblue")) +
# scale_x_continuous(breaks = seq(0,1*input$cut_renda1,0.05*input$cut_renda1))
# scale_y_continuous(breaks = seq(0,1,0.1))+
axis.theme(title_size = 12,textsize = 12,pos_leg = "bottom",x.angle = 45,vjust = 1,hjust=1);p1
p1 <- ggplot(data = df_melt,aes(x= dia, y = Envios))+
geom_point(size = 1.2, alpha = 0.75)+
geom_line(size = 1.2, alpha = 0.75,aes(color  = Legenda,group = "Legenda"))+
scale_color_manual(values = c("darkgreen", "darkred","darkblue")) +
# scale_x_continuous(breaks = seq(0,1*input$cut_renda1,0.05*input$cut_renda1))
# scale_y_continuous(breaks = seq(0,1,0.1))+
axis.theme(title_size = 12,textsize = 12,pos_leg = "bottom",x.angle = 45,vjust = 1,hjust=1);p1
p1 <- ggplot(data = df_melt,aes(x= dia, y = Envios))+
geom_point(size = 1.2, alpha = 0.75)+
geom_line(size = 1.2, alpha = 0.75,aes(color  = Legenda,group = Legenda))+
scale_color_manual(values = c("darkgreen", "darkred","darkblue")) +
# scale_x_continuous(breaks = seq(0,1*input$cut_renda1,0.05*input$cut_renda1))
# scale_y_continuous(breaks = seq(0,1,0.1))+
axis.theme(title_size = 12,textsize = 12,pos_leg = "bottom",x.angle = 45,vjust = 1,hjust=1);p1
p1 <- ggplot(data = df_melt,aes(x= dia, y = Envios))+
geom_point(size = 1.2, alpha = 0.75)+
geom_line(size = 1.2, alpha = 0.75,aes(color  = Legenda,group = Legenda))+
scale_color_manual(values = c("darkgreen", "red","darkblue")) +
# scale_x_continuous(breaks = seq(0,1*input$cut_renda1,0.05*input$cut_renda1))
# scale_y_continuous(breaks = seq(0,1,0.1))+
axis.theme(title_size = 12,textsize = 12,pos_leg = "bottom",x.angle = 45,vjust = 1,hjust=1);p1
shiny::runApp()
runApp()
runApp()
runApp()
df_melt <- x1 %>% reshape2::melt(id.vars = "dia",measure.vars = c("total","pending","sent"),value.name = "Envios",variable.name= "Legenda")
df_melt$Legenda <- as.character(df_melt$Legenda)
p1 <- ggplot(data = df_melt,aes(x= dia, y = Envios))+
geom_point(size = 1.2, alpha = 0.75)+
geom_line(size = 1.2, alpha = 0.75,aes(color  = Legenda,group = Legenda))+
scale_color_manual(values = c("darkgreen", "red","darkblue")) +
# scale_x_continuous(breaks = seq(0,1*input$cut_renda1,0.05*input$cut_renda1))
# scale_y_continuous(breaks = seq(0,1,0.1))+
axis.theme(title_size = 12,textsize = 12,pos_leg = "bottom",x.angle = 45,vjust = 1,hjust=1);p1
#                  yend = max(df_acumulado$maxbom)),color = "red",size=1.2) +
# geom_segment(aes(x = max(df_acumulado$cutoff),
#                  y = max(df_acumulado$maxmau) + max(df_acumulado$max_diff)/2,
#                  xend = max(df_acumulado$cutoff)+0.1,
#                  yend = max(df_acumulado$maxmau) + max(df_acumulado$max_diff)/2),
#              arrow = arrow(length = unit(0.5, "cm")))+
# annotate(geom="text", x = df_acumulado$cutoff+0.15,
#          y = max(df_acumulado$maxmau) + max(df_acumulado$max_diff)/2, label=paste0("KS.: ",round(df_acumulado$max_diff,3),"\nCutoff:",df_acumulado$cutoff),
#          color="black")
#
ggplotly(p1) %>% layout(hovermode = TRUE, spikedistance =  -1,margin = c(0,0,0,10),
xaxis = list(title = "<b>NÚMERO DE CASOS</b>", showspikes = TRUE, titlefont = list(size = 24),
spikemode  = 'across', #toaxis, across, marker
spikesnap = 'cursor',  ticks = "outside",tickangle = -45,
showline=TRUE,tickfont = list(size = 24),fixedrange=TRUE,
showgrid=TRUE),
yaxis = list (title = "<b>CIDADES</b>",
spikemode  = 'across', #toaxis, across, marker
spikesnap = 'cursor', zeroline=FALSE,titlefont = list(size = 24),
showline=TRUE,tickfont = list(size = 24),fixedrange=TRUE,
showgrid=TRUE),
autosize = T,height= 600) %>% config(displayModeBar = FALSE)
df_melt %>%
plot_ly(x=~dia, y=~Envios, type="scatter", mode="lines+marker", color=~Legenda) %>% layout(hovermode = TRUE, spikedistance =  -1,margin = c(0,0,0,10),
xaxis = list(title = "<b>NÚMERO DE CASOS</b>", showspikes = TRUE, titlefont = list(size = 24),
spikemode  = 'across', #toaxis, across, marker
spikesnap = 'cursor',  ticks = "outside",tickangle = -45,
showline=TRUE,tickfont = list(size = 24),fixedrange=TRUE,
showgrid=TRUE),
yaxis = list (title = "<b>CIDADES</b>",
spikemode  = 'across', #toaxis, across, marker
spikesnap = 'cursor', zeroline=FALSE,titlefont = list(size = 24),
showline=TRUE,tickfont = list(size = 24),fixedrange=TRUE,
showgrid=TRUE),
autosize = T,height= 600) %>% config(displayModeBar = FALSE)
names <- c("total","pending","sent")
names
p <- plot_ly(data = x1)
names <- c("total","pending","sent")
for(i in names){
p <- add_trace(p, x = "dia", y = i, mode = "lines")
}
p
p <- plot_ly(data = x1)
names <- c("total","pending","sent")
for(i in names){
p <- add_trace(p, x = "dia", y = i, type="scatter", mode="lines+marker", color=~Legenda)
}
p
p <- add_trace(p, x = "dia", y = i, type="scatter", mode="lines+marker", color=~"Lengenda")
for(i in names){
p <- add_trace(p, x = "dia", y = i, type="scatter", mode="lines+marker", color=~"Lengenda")
}
p
p <- add_trace(p, x = "dia", y = i, type="scatter", mode="lines+marker", color=~"Legenda")
for(i in names){
p <- add_trace(p, x = "dia", y = i, type="scatter", mode="lines+marker", color=~"Legenda")
}
p
x1
p <- add_trace(p, x = "dia", y = i, type="scatter", mode="lines+marker")
for(i in names){
p <- add_trace(p, x = "dia", y = i, type="scatter", mode="lines+marker")
}
p
p <- plot_ly(data = x1)
names <- c("total","pending","sent")
for(i in names){
p <- add_trace(p, x = "dia", y = i, type="scatter", mode="lines+marker")
}
p
p <- add_trace(p, x = "dia", y = i, type="scatter", mode="lines+marker",evaluate = TRUE)
for(i in names){
p <- add_trace(p, x = "dia", y = i, type="scatter", mode="lines+marker",evaluate = TRUE)
}
p
#
#
#
#                                                                                                         showgrid=TRUE),
#                                                                                            yaxis = list (title = "<b>CIDADES</b>",
#                                                                                                          spikemode  = 'across', #toaxis, across, marker
#                                                                                                          spikesnap = 'cursor', zeroline=FALSE,titlefont = list(size = 24),
#                                                                                                          showline=TRUE,tickfont = list(size = 24),fixedrange=TRUE,
#                                                                                                          showgrid=TRUE),
#                                                                                            autosize = T,height= 600) %>% config(displayModeBar = FALSE)
my_lines <- list(
list(x=x1$dia, y=x1$total, color='red'),
list(x=x1$dia, y=x1$pending, color='blue'),
list(x=x1$dia, y=x1$sent, color='green')
)
#
#
#
#                                                                                                         showgrid=TRUE),
#                                                                                            yaxis = list (title = "<b>CIDADES</b>",
#                                                                                                          spikemode  = 'across', #toaxis, across, marker
#                                                                                                          spikesnap = 'cursor', zeroline=FALSE,titlefont = list(size = 24),
#                                                                                                          showline=TRUE,tickfont = list(size = 24),fixedrange=TRUE,
#                                                                                                          showgrid=TRUE),
#                                                                                            autosize = T,height= 600) %>% config(displayModeBar = FALSE)
my_lines <- list(
list(x=x1$dia, y=x1$total, color='red'),
list(x=x1$dia, y=x1$pending, color='blue'),
list(x=x1$dia, y=x1$sent, color='green')
)
p <- plot_ly(data = x1)
names <- c("total","pending","sent")
for(line in my_lines) {
p <- add_trace(p,  x=line[['x']],  y=line[['y']],marker=list(color=line[['color']]), type="scatter", mode="lines+marker",evaluate = TRUE)
}
p
#
#
#
#                                                                                                         showgrid=TRUE),
#                                                                                            yaxis = list (title = "<b>CIDADES</b>",
#                                                                                                          spikemode  = 'across', #toaxis, across, marker
#                                                                                                          spikesnap = 'cursor', zeroline=FALSE,titlefont = list(size = 24),
#                                                                                                          showline=TRUE,tickfont = list(size = 24),fixedrange=TRUE,
#                                                                                                          showgrid=TRUE),
#                                                                                            autosize = T,height= 600) %>% config(displayModeBar = FALSE)
my_lines <- list(
list(x=x1$dia, y=x1$total, color='red',nome = "Total"),
list(x=x1$dia, y=x1$pending, color='blue',nome = "Pendente"),
list(x=x1$dia, y=x1$sent, color='green',nome = "Enviado")
)
p <- plot_ly(data = x1)
names <- c("total","pending","sent")
for(line in my_lines) {
p <- add_trace(p,  x=line[['x']],  y=line[['y']],marker=list(color=line[['color']]),names = line[['nome']], type="scatter", mode="lines+marker",evaluate = TRUE)
}
p
p <- add_trace(p,  x=line[['x']],  y=line[['y']],marker=list(color=line[['color']]),name = line[['nome']], type="scatter", mode="lines+marker",evaluate = TRUE)
for(line in my_lines) {
p <- add_trace(p,  x=line[['x']],  y=line[['y']],marker=list(color=line[['color']]),name = line[['nome']], type="scatter", mode="lines+marker",evaluate = TRUE)
}
p
#
#
#
#                                                                                                         showgrid=TRUE),
#                                                                                            yaxis = list (title = "<b>CIDADES</b>",
#                                                                                                          spikemode  = 'across', #toaxis, across, marker
#                                                                                                          spikesnap = 'cursor', zeroline=FALSE,titlefont = list(size = 24),
#                                                                                                          showline=TRUE,tickfont = list(size = 24),fixedrange=TRUE,
#                                                                                                          showgrid=TRUE),
#                                                                                            autosize = T,height= 600) %>% config(displayModeBar = FALSE)
my_lines <- list(
list(x=x1$dia, y=x1$total, color='red',nome = "Total"),
list(x=x1$dia, y=x1$pending, color='blue',nome = "Pendente"),
list(x=x1$dia, y=x1$sent, color='green',nome = "Enviado")
)
p <- plot_ly(data = x1)
names <- c("total","pending","sent")
for(line in my_lines) {
p <- add_trace(p,  x=line[['x']],  y=line[['y']],marker=list(color=line[['color']]),name = line[['nome']], type="scatter", mode="lines+marker",evaluate = TRUE)
}
p
p %>% layout(hovermode = TRUE, spikedistance =  -1,margin = c(0,0,0,10),
xaxis = list(title = "<b>Qntd. Envios</b>", showspikes = TRUE, titlefont = list(size = 24),
spikemode  = 'across', #toaxis, across, marker
spikesnap = 'cursor',  ticks = "outside",tickangle = -45,
showline=TRUE,tickfont = list(size = 24),fixedrange=TRUE,
showgrid=TRUE),
yaxis = list (title = "<b>Dias</b>",
spikemode  = 'across', #toaxis, across, marker
spikesnap = 'cursor', zeroline=FALSE,titlefont = list(size = 24),
showline=TRUE,tickfont = list(size = 24),fixedrange=TRUE,
showgrid=TRUE),
autosize = T,height= 600) %>% config(displayModeBar = FALSE)
p %>% layout(hovermode = "x", spikedistance =  -1,margin = c(0,0,0,10),
xaxis = list(title = "<b>Qntd. Envios</b>", showspikes = TRUE, titlefont = list(size = 24),
spikemode  = 'across', #toaxis, across, marker
spikesnap = 'cursor',  ticks = "outside",tickangle = -45,
showline=TRUE,tickfont = list(size = 24),fixedrange=TRUE,
showgrid=TRUE),
yaxis = list (title = "<b>Dias</b>",
spikemode  = 'across', #toaxis, across, marker
spikesnap = 'cursor', zeroline=FALSE,titlefont = list(size = 24),
showline=TRUE,tickfont = list(size = 24),fixedrange=TRUE,
showgrid=TRUE),
autosize = T,height= 600) %>% config(displayModeBar = FALSE)
library(dplyr)
library(ggplot2)
df_melt <- x1 %>% reshape2::melt(id.vars = "dia",measure.vars = c("total","pending","sent"),value.name = "Envios",variable.name= "Legenda")
df_melt$Legenda <- as.character(df_melt$Legenda)
p1 <- ggplot(data = df_melt,aes(x= dia, y = Envios))+
geom_point(size = 1.2, alpha = 0.75)+
geom_line(size = 1.2, alpha = 0.75,aes(color  = Legenda,group = Legenda))+
scale_color_manual(values = c("darkgreen", "red","darkblue")) +
# scale_x_continuous(breaks = seq(0,1*input$cut_renda1,0.05*input$cut_renda1))
# scale_y_continuous(breaks = seq(0,1,0.1))+
axis.theme(title_size = 12,textsize = 12,pos_leg = "bottom",x.angle = 45,vjust = 1,hjust=1);p1
df_melt <- x1 %>% reshape2::melt(id.vars = "dia",measure.vars = c("total","pending","sent"),value.name = "Envios",variable.name= "Legenda")
df_melt$Legenda <- as.character(df_melt$Legenda)
p1 <- ggplot(data = df_melt,aes(x= dia, y = Envios))+
geom_point(size = 1.2, alpha = 0.75)+
geom_line(size = 1.2, alpha = 0.75,aes(color  = Legenda,group = Legenda))+
scale_color_manual(values = c("darkgreen", "red","darkblue")) +
# scale_x_continuous(breaks = seq(0,1*input$cut_renda1,0.05*input$cut_renda1))
# scale_y_continuous(breaks = seq(0,1,0.1))+
axis.theme(title_size = 12,textsize = 12,pos_leg = "bottom",x.angle = 45,vjust = 1,hjust=1);p1
#                  yend = max(df_acumulado$maxbom)),color = "red",size=1.2) +
# geom_segment(aes(x = max(df_acumulado$cutoff),
#                  y = max(df_acumulado$maxmau) + max(df_acumulado$max_diff)/2,
#                  xend = max(df_acumulado$cutoff)+0.1,
#                  yend = max(df_acumulado$maxmau) + max(df_acumulado$max_diff)/2),
#              arrow = arrow(length = unit(0.5, "cm")))+
# annotate(geom="text", x = df_acumulado$cutoff+0.15,
#          y = max(df_acumulado$maxmau) + max(df_acumulado$max_diff)/2, label=paste0("KS.: ",round(df_acumulado$max_diff,3),"\nCutoff:",df_acumulado$cutoff),
#          color="black")
#
ggplotly(p1) %>% layout(hovermode = "x", spikedistance =  -1,margin = c(0,0,0,10),
xaxis = list(title = "<b>Qntd. Envios</b>", showspikes = TRUE, titlefont = list(size = 24),
spikemode  = 'across', #toaxis, across, marker
spikesnap = 'cursor',  ticks = "outside",tickangle = -45,
showline=TRUE,tickfont = list(size = 24),fixedrange=TRUE,
showgrid=TRUE),
yaxis = list (title = "<b>Dias</b>",
spikemode  = 'across', #toaxis, across, marker
spikesnap = 'cursor', zeroline=FALSE,titlefont = list(size = 24),
showline=TRUE,tickfont = list(size = 24),fixedrange=TRUE,
showgrid=TRUE),
autosize = T,height= 600) %>% config(displayModeBar = FALSE)
p1 <- ggplot(data = df_melt,aes(x= dia, y = Envios))+
geom_point(size = 1.2, alpha = 0.75)+
geom_line(size = 1.2, alpha = 0.75,aes(color  = Legenda,group = Legenda))+
scale_color_manual(values = c("darkgreen", "red","darkblue")) +
# scale_x_continuous(breaks = seq(0,1*input$cut_renda1,0.05*input$cut_renda1))
# scale_y_continuous(breaks = seq(0,1,0.1))+
axis.theme(title_size = 12,textsize = 12,pos_leg = "bottom",x.angle = 45,vjust = 1,hjust=1)
#                  yend = max(df_acumulado$maxbom)),color = "red",size=1.2) +
# geom_segment(aes(x = max(df_acumulado$cutoff),
#                  y = max(df_acumulado$maxmau) + max(df_acumulado$max_diff)/2,
#                  xend = max(df_acumulado$cutoff)+0.1,
#                  yend = max(df_acumulado$maxmau) + max(df_acumulado$max_diff)/2),
#              arrow = arrow(length = unit(0.5, "cm")))+
# annotate(geom="text", x = df_acumulado$cutoff+0.15,
#          y = max(df_acumulado$maxmau) + max(df_acumulado$max_diff)/2, label=paste0("KS.: ",round(df_acumulado$max_diff,3),"\nCutoff:",df_acumulado$cutoff),
#          color="black")
#
ggplotly(p1) %>% layout(hovermode = "x", spikedistance =  -1,margin = c(0,0,0,10),
xaxis = list(title = "<b>Qntd. Envios</b>", showspikes = TRUE, titlefont = list(size = 24),
spikemode  = 'across', #toaxis, across, marker
spikesnap = 'cursor',  ticks = "outside",tickangle = -45,
showline=TRUE,tickfont = list(size = 24),fixedrange=TRUE,
showgrid=TRUE),
yaxis = list (title = "<b>Dias</b>",
spikemode  = 'across', #toaxis, across, marker
spikesnap = 'cursor', zeroline=FALSE,titlefont = list(size = 24),
showline=TRUE,tickfont = list(size = 24),fixedrange=TRUE,
showgrid=TRUE),
autosize = T,height= 600) %>% config(displayModeBar = FALSE)
runApp()
runApp()
#                  yend = max(df_acumulado$maxbom)),color = "red",size=1.2) +
# geom_segment(aes(x = max(df_acumulado$cutoff),
#                  y = max(df_acumulado$maxmau) + max(df_acumulado$max_diff)/2,
#                  xend = max(df_acumulado$cutoff)+0.1,
#                  yend = max(df_acumulado$maxmau) + max(df_acumulado$max_diff)/2),
#              arrow = arrow(length = unit(0.5, "cm")))+
# annotate(geom="text", x = df_acumulado$cutoff+0.15,
#          y = max(df_acumulado$maxmau) + max(df_acumulado$max_diff)/2, label=paste0("KS.: ",round(df_acumulado$max_diff,3),"\nCutoff:",df_acumulado$cutoff),
#          color="black")
#
ggplotly(p1) %>% layout(hovermode = "x", spikedistance =  -1,margin = c(0,0,0,10),
xaxis = list(title = "<b>Qntd. Envios</b>", showspikes = TRUE, titlefont = list(size = 24),
spikemode  = 'across', #toaxis, across, marker
spikesnap = 'cursor',  ticks = "outside",tickangle = -45,
showline=TRUE,tickfont = list(size = 24),fixedrange=TRUE,
showgrid=TRUE),
yaxis = list (title = "<b>Dias</b>",
spikemode  = 'across', #toaxis, across, marker
spikesnap = 'cursor', zeroline=FALSE,titlefont = list(size = 24),
showline=TRUE,tickfont = list(size = 24),fixedrange=TRUE,
showgrid=TRUE),
autosize = T) %>% config(displayModeBar = FALSE)
runApp()
df_melt <- x1 %>% reshape2::melt(id.vars = "dia",measure.vars = c("total","pending","sent"),value.name = "Envios",variable.name= "Legenda")
#df_melt$Legenda <- as.character(df_melt$Legenda)
p1 <- ggplot(data = df_melt,aes(x= dia, y = Envios))+
geom_point(size = 1.2, alpha = 0.75)+
geom_line(size = 1.2, alpha = 0.75,aes(color  = Legenda,group = Legenda))+
scale_color_manual(values = c("darkgreen", "red","darkblue")) +
# scale_x_continuous(breaks = seq(0,1*input$cut_renda1,0.05*input$cut_renda1))
# scale_y_continuous(breaks = seq(0,1,0.1))+
axis.theme(title_size = 12,textsize = 12,pos_leg = "bottom",x.angle = 45,vjust = 1,hjust=1)
p1
#                  yend = max(df_acumulado$maxbom)),color = "red",size=1.2) +
# geom_segment(aes(x = max(df_acumulado$cutoff),
#                  y = max(df_acumulado$maxmau) + max(df_acumulado$max_diff)/2,
#                  xend = max(df_acumulado$cutoff)+0.1,
#                  yend = max(df_acumulado$maxmau) + max(df_acumulado$max_diff)/2),
#              arrow = arrow(length = unit(0.5, "cm")))+
# annotate(geom="text", x = df_acumulado$cutoff+0.15,
#          y = max(df_acumulado$maxmau) + max(df_acumulado$max_diff)/2, label=paste0("KS.: ",round(df_acumulado$max_diff,3),"\nCutoff:",df_acumulado$cutoff),
#          color="black")
#
ggplotly(p1)       %>% layout(hovermode = "x", spikedistance =  -1,margin = c(0,0,0,10),
xaxis = list(title = "<b>Qntd. Envios</b>", showspikes = TRUE, titlefont = list(size = 24),
spikemode  = 'across', #toaxis, across, marker
spikesnap = 'cursor',  ticks = "outside",tickangle = -45,
showline=TRUE,tickfont = list(size = 24),fixedrange=TRUE,
showgrid=TRUE),
yaxis = list (title = "<b>Dias</b>",
spikemode  = 'across', #toaxis, across, marker
spikesnap = 'cursor', zeroline=FALSE,titlefont = list(size = 24),
showline=TRUE,tickfont = list(size = 24),fixedrange=TRUE,
showgrid=TRUE),
autosize = T) %>% config(displayModeBar = FALSE)
df_melt <- x1 %>% reshape2::melt(id.vars = "dia",measure.vars = c("total","pending","sent"),value.name = "Envios",variable.name= "Legenda")
df_melt$Legenda <- as.character(df_melt$Legenda)
#                                                                                                          spikemode  = 'across', #toaxis, across, marker
#                                                                                                          spikesnap = 'cursor', zeroline=FALSE,titlefont = list(size = 24),
#                                                                                                          showline=TRUE,tickfont = list(size = 24),fixedrange=TRUE,
#                                                                                                          showgrid=TRUE),
#                                                                                            autosize = T,height= 600) %>% config(displayModeBar = FALSE)
# my_lines <- list(
#   list(x=x1$dia, y=x1$total, color='red',nome = "Total"),
#   list(x=x1$dia, y=x1$pending, color='blue',nome = "Pendente"),
#   list(x=x1$dia, y=x1$sent, color='green',nome = "Enviado")
# )
p <- plot_ly(data = x1)
names <- c("total","pending","sent")
for(line in my_lines) {
p <- add_trace(p,  x=line[['x']],  y=line[['y']],marker=list(color=line[['color']]),name = line[['nome']], type="scatter", mode="lines+marker",evaluate = TRUE)
}
p %>% layout(hovermode = "x", spikedistance =  -1,margin = c(0,0,0,10),
xaxis = list(title = "<b>Qntd. Envios</b>", showspikes = TRUE, titlefont = list(size = 24),
spikemode  = 'across', #toaxis, across, marker
spikesnap = 'cursor',  ticks = "outside",tickangle = -45,
showline=TRUE,tickfont = list(size = 24),fixedrange=TRUE,
showgrid=TRUE),
yaxis = list (title = "<b>Dias</b>",
spikemode  = 'across', #toaxis, across, marker
spikesnap = 'cursor', zeroline=FALSE,titlefont = list(size = 24),
showline=TRUE,tickfont = list(size = 24),fixedrange=TRUE,
showgrid=TRUE),
autosize = T,height= 600) %>% config(displayModeBar = FALSE)
runApp()
