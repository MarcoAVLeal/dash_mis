scale_color_manual(values = c("darkgreen", "red","darkblue")) +
# scale_x_continuous(breaks = seq(0,1*input$cut_renda1,0.05*input$cut_renda1))
# scale_y_continuous(breaks = seq(0,1,0.1))+
axis.theme(title_size = 12,textsize = 12,pos_leg = "bottom",x.angle = 45,vjust = 1,hjust=1)
plot <- ggplotly(p1) %>% layout(hovermode = "x", spikedistance =  -1,margin = c(0,0,0,10),
xaxis = list(title = "<b>Qntd. Envios</b>", showspikes = TRUE, titlefont = list(size = 24),
spikemode  = 'across', #toaxis, across, marker
spikesnap = 'cursor',  ticks = "outside",tickangle = -45,
showline=TRUE,tickfont = list(size = 24),fixedrange=TRUE,
showgrid=TRUE),
yaxis = list (title = "<b>Dias</b>",
spikemode  = 'across', #toaxis, across, marker
spikesnap = 'cursor', zeroline=FALSE,titlefont = list(size = 24),
showline=TRUE,tickfont = list(size = 24),fixedrange=TRUE,
showgrid=TRUE),
autosize = T,height= 600) %>% config(displayModeBar = FALSE)
plot
df_melt         <- x1 %>% reshape2::melt(id.vars = "dia",measure.vars = c("total","pending","sent"),value.name = "Envios",variable.name= "Legenda")
df_melt$Legenda <- as.character(df_melt$Legenda)
df_melt         <- df_melt %>% dplyr::group_by(Legenda) %>% mutate("Acumulado" = cumsum(Envios))
View(df_melt)
df_melt         <- df_melt %>% dplyr::group_by(Legenda) %>% mutate("Acumulado" = cumsum(Envios))
df_melt
df_melt         <- df_melt %>% dplyr::group_by("Legenda") %>% mutate("Acumulado" = cumsum(Envios))
df_melt
View(df_melt)
aggregate(df_melt$Envios,by = Lengeda,FUN = cumsum)
aggregate(df_melt$Envios,by = Legenda,FUN = cumsum)
aggregate(df_melt$Envios,by = "Legenda",FUN = cumsum)
aggregate(df_melt$Envios,by = list("Legenda"),FUN = cumsum)
aggregate(df_melt$Envios,by = list(Legenda = Legenda),FUN = cumsum)
aggregate(df_melt$Envios,by = list(Legenda = df_melt$Legenda),FUN = cumsum)
df_melt         <- df_melt %>% dplyr::group_by("Legenda") %>% summarise("Acumulado" = cumsum(Envios))
df_melt
df_melt         <- df_melt %>% dplyr::group_by(Legenda) %>% summarise("Acumulado" = cumsum(Envios))
df_melt         <- x1 %>% reshape2::melt(id.vars = "dia",measure.vars = c("total","pending","sent"),value.name = "Envios",variable.name= "Legenda")
df_melt$Legenda <- as.character(df_melt$Legenda)
df_melt         <- df_melt %>% dplyr::group_by(Legenda) %>% summarise("Acumulado" = cumsum(Envios))
df_melt
df_melt         <- x1 %>% reshape2::melt(id.vars = "dia",measure.vars = c("total","pending","sent"),value.name = "Envios",variable.name= "Legenda")
df_melt$Legenda <- as.character(df_melt$Legenda)
#df_melt         <- df_melt %>% dplyr::group_by(Legenda) %>% summarise("Acumulado" = cumsum(Envios))
aggregate(df_melt$Envios,by = list(Legenda = df_melt$Legenda),FUN = cumsum)
#df_melt         <- df_melt %>% dplyr::group_by(Legenda) %>% summarise("Acumulado" = cumsum(Envios))
aggregate(df_melt$Envios,by = list(Legenda = df_melt$Legenda),FUN = cumsum)  %>% t
#df_melt         <- df_melt %>% dplyr::group_by(Legenda) %>% summarise("Acumulado" = cumsum(Envios))
df_melt_acumulado  <- tapply(X = df_melt$Envios,INDEX = df_melt$Legenda,FUN = cumsum)
df_melt_acumulado
#df_melt         <- df_melt %>% dplyr::group_by(Legenda) %>% summarise("Acumulado" = cumsum(Envios))
df_melt_acumulado  <- tapply(X = df_melt$Envios,INDEX = df_melt$Legenda,FUN = cumsum) %>% ldply(data.frame)
df_melt_acumulado
df_melt$Legenda
df_melt$Legenda
tapply(X = df_melt$Envios,INDEX = df_melt$Legenda,FUN = cumsum)
apply(X = df_melt$Envios,INDEX = df_melt$Legenda,FUN = cumsum)
apply(X = df_melt$Envios,INDEX = df_melt$Legenda,FUN = cumsum) %>%
unlist(recursive = FALSE) %>%
enframe() %>%
unnest()
library(tidyverse)
tapply(X = df_melt$Envios,INDEX = df_melt$Legenda,FUN = cumsum) %>%
unlist(recursive = FALSE) %>%
enframe() %>%
unnest()
tapply(X = df_melt$Envios,INDEX = df_melt$Legenda,FUN = cumsum) %>%
unlist(recursive = FALSE) %>%
enframe()
#df_melt         <- df_melt %>% dplyr::group_by(Legenda) %>% summarise("Acumulado" = cumsum(Envios))
df_melt_acumulado  <- tapply(X = df_melt$Envios,INDEX = df_melt$Legenda,FUN = cumsum) %>% ldply(data.frame)
#df_melt         <- df_melt %>% dplyr::group_by(Legenda) %>% summarise("Acumulado" = cumsum(Envios))
df_melt_acumulado  <- tapply(X = df_melt$Envios,INDEX = df_melt$Legenda,FUN = cumsum)
View(df_melt)
df_melt$Acumulado <- acumulado
p1 <- ggplot(data = df_melt,aes(x= dia, y = Envios)) +
geom_point(size = 1.2, alpha = 0.75)+
geom_line(size = 1.2, alpha = 0.75,aes(color  = Legenda,group = Legenda)) +
scale_color_manual(values = c("darkgreen", "red","darkblue")) +
# scale_x_continuous(breaks = seq(0,1*input$cut_renda1,0.05*input$cut_renda1))
# scale_y_continuous(breaks = seq(0,1,0.1))+
axis.theme(title_size = 12,textsize = 12,pos_leg = "bottom",x.angle = 45,vjust = 1,hjust=1)
plot <- ggplotly(p1) %>% layout(hovermode = "x", spikedistance =  -1,margin = c(0,0,0,10),
xaxis = list(title = "<b>Qntd. Envios</b>", showspikes = TRUE, titlefont = list(size = 24),
spikemode  = 'across', #toaxis, across, marker
spikesnap = 'cursor',  ticks = "outside",tickangle = -45,
showline=TRUE,tickfont = list(size = 24),fixedrange=TRUE,
showgrid=TRUE),
yaxis = list (title = "<b>Dias</b>",
spikemode  = 'across', #toaxis, across, marker
spikesnap = 'cursor', zeroline=FALSE,titlefont = list(size = 24),
showline=TRUE,tickfont = list(size = 24),fixedrange=TRUE,
showgrid=TRUE),
autosize = T,height= 600) %>% config(displayModeBar = FALSE)
plot
p1 <- ggplot(data = df_melt,aes(x= dia, y = Acumulado)) +
geom_point(size = 1.2, alpha = 0.75)+
geom_line(size = 1.2, alpha = 0.75,aes(color  = Legenda,group = Legenda)) +
scale_color_manual(values = c("darkgreen", "red","darkblue")) +
# scale_x_continuous(breaks = seq(0,1*input$cut_renda1,0.05*input$cut_renda1))
# scale_y_continuous(breaks = seq(0,1,0.1))+
axis.theme(title_size = 12,textsize = 12,pos_leg = "bottom",x.angle = 45,vjust = 1,hjust=1)
plot <- ggplotly(p1) %>% layout(hovermode = "x", spikedistance =  -1,margin = c(0,0,0,10),
xaxis = list(title = "<b>Qntd. Envios</b>", showspikes = TRUE, titlefont = list(size = 24),
spikemode  = 'across', #toaxis, across, marker
spikesnap = 'cursor',  ticks = "outside",tickangle = -45,
showline=TRUE,tickfont = list(size = 24),fixedrange=TRUE,
showgrid=TRUE),
yaxis = list (title = "<b>Dias</b>",
spikemode  = 'across', #toaxis, across, marker
spikesnap = 'cursor', zeroline=FALSE,titlefont = list(size = 24),
showline=TRUE,tickfont = list(size = 24),fixedrange=TRUE,
showgrid=TRUE),
autosize = T,height= 600) %>% config(displayModeBar = FALSE)
plot
df_melt         <- x1 %>% reshape2::melt(id.vars = "dia",measure.vars = c("total","pending","sent"),value.name = "Envios",variable.name= "Legenda")
df_melt$Legenda <- as.character(df_melt$Legenda)
#df_melt         <- df_melt %>% dplyr::group_by(Legenda) %>% summarise("Acumulado" = cumsum(Envios))
df_melt_acumulado  <- tapply(X = df_melt$Envios,INDEX = df_melt$Legenda,FUN = cumsum)
acumulado         <- c(df_melt_acumulado$total,df_melt_acumulado$pending,df_melt_acumulado$sent)
df_melt$Acumulado <- acumulado
df_melt$Acumulado
View(df_melt)
p1 <- ggplot(data = df_melt,aes(x= dia, y = Acumulado)) +
geom_point(size = 1.2, alpha = 0.75)+
geom_line(size = 1.2, alpha = 0.75,aes(color  = Legenda,group = Legenda)) +
scale_color_manual(values = c("darkgreen", "red","darkblue")) +
# scale_x_continuous(breaks = seq(0,1*input$cut_renda1,0.05*input$cut_renda1))
# scale_y_continuous(breaks = seq(0,1,0.1))+
axis.theme(title_size = 12,textsize = 12,pos_leg = "bottom",x.angle = 45,vjust = 1,hjust=1)
plot <- ggplotly(p1) %>% layout(hovermode = "x", spikedistance =  -1,margin = c(0,0,0,10),
xaxis = list(title = "<b>Qntd. Envios</b>", showspikes = TRUE, titlefont = list(size = 24),
spikemode  = 'across', #toaxis, across, marker
spikesnap = 'cursor',  ticks = "outside",tickangle = -45,
showline=TRUE,tickfont = list(size = 24),fixedrange=TRUE,
showgrid=TRUE),
yaxis = list (title = "<b>Dias</b>",
spikemode  = 'across', #toaxis, across, marker
spikesnap = 'cursor', zeroline=FALSE,titlefont = list(size = 24),
showline=TRUE,tickfont = list(size = 24),fixedrange=TRUE,
showgrid=TRUE),
autosize = T,height= 600) %>% config(displayModeBar = FALSE)
plot
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
df_melt$dia
max(df_melt$dia)
p1 <- ggplot(data = df_melt,aes(x= dia, y = Envios)) +
geom_point(size = 1.2, alpha = 0.75)+
geom_line(size = 1.2, alpha = 0.75,aes(color  = Legenda,group = Legenda)) +
scale_color_manual(values = c("darkgreen", "red","darkblue")) +
# scale_x_continuous(breaks = seq(0,1*input$cut_renda1,0.05*input$cut_renda1))
# scale_y_continuous(breaks = seq(0,1,0.1))+
axis.theme(title_size = 12,textsize = 12,pos_leg = "bottom",x.angle = 45,vjust = 1,hjust=1) +
geom_vline(xintercept = max(df_melt$dia),
linetype = "dashed", colour = "red", alpha = 0.75) +
plot <- ggplotly(p1) %>% layout(hovermode = "x", spikedistance =  -1,margin = c(0,0,0,10),
xaxis = list(title = "<b>Qntd. Envios</b>", showspikes = TRUE, titlefont = list(size = 24),
spikemode  = 'across', #toaxis, across, marker
spikesnap = 'cursor',  ticks = "outside",tickangle = -45,
showline=TRUE,tickfont = list(size = 20),fixedrange=TRUE,
showgrid=TRUE),
yaxis = list (title = "<b>Dias</b>",
spikemode  = 'across', #toaxis, across, marker
spikesnap = 'cursor', zeroline=FALSE,titlefont = list(size = 24),
showline=TRUE,tickfont = list(size = 20),fixedrange=TRUE,
showgrid=TRUE),height = 480) %>% config(displayModeBar = FALSE)
p1 <- ggplot(data = df_melt,aes(x= dia, y = Envios)) +
geom_point(size = 1.2, alpha = 0.75)+
geom_line(size = 1.2, alpha = 0.75,aes(color  = Legenda,group = Legenda)) +
scale_color_manual(values = c("darkgreen", "red","darkblue")) +
# scale_x_continuous(breaks = seq(0,1*input$cut_renda1,0.05*input$cut_renda1))
# scale_y_continuous(breaks = seq(0,1,0.1))+
axis.theme(title_size = 12,textsize = 12,pos_leg = "bottom",x.angle = 45,vjust = 1,hjust=1) +
geom_vline(xintercept = max(df_melt$dia),
linetype = "dashed", colour = "red", alpha = 0.75)
plot <- ggplotly(p1) %>% layout(hovermode = "x", spikedistance =  -1,margin = c(0,0,0,10),
xaxis = list(title = "<b>Qntd. Envios</b>", showspikes = TRUE, titlefont = list(size = 24),
spikemode  = 'across', #toaxis, across, marker
spikesnap = 'cursor',  ticks = "outside",tickangle = -45,
showline=TRUE,tickfont = list(size = 20),fixedrange=TRUE,
showgrid=TRUE),
yaxis = list (title = "<b>Dias</b>",
spikemode  = 'across', #toaxis, across, marker
spikesnap = 'cursor', zeroline=FALSE,titlefont = list(size = 24),
showline=TRUE,tickfont = list(size = 20),fixedrange=TRUE,
showgrid=TRUE),height = 480) %>% config(displayModeBar = FALSE)
plot
p1 <- ggplot(data = df_melt,aes(x= dia, y = Envios)) +
geom_point(size = 1.2, alpha = 0.75)+
geom_line(size = 1.2, alpha = 0.75,aes(color  = Legenda,group = Legenda)) +
scale_color_manual(values = c("darkgreen", "red","darkblue")) +
# scale_x_continuous(breaks = seq(0,1*input$cut_renda1,0.05*input$cut_renda1))
# scale_y_continuous(breaks = seq(0,1,0.1))+
axis.theme(title_size = 12,textsize = 12,pos_leg = "bottom",x.angle = 45,vjust = 1,hjust=1) +
geom_vline(xintercept = max(df_melt$dia),
linetype = "dashed", colour = "red", alpha = 0.75)
p1
plot <- ggplotly(p1) %>% layout(hovermode = "x", spikedistance =  -1,margin = c(0,0,0,10),
xaxis = list(title = "<b>Qntd. Envios</b>", showspikes = TRUE, titlefont = list(size = 24),
spikemode  = 'across', #toaxis, across, marker
spikesnap = 'cursor',  ticks = "outside",tickangle = -45,
showline=TRUE,tickfont = list(size = 20),fixedrange=TRUE,
showgrid=TRUE),
yaxis = list (title = "<b>Dias</b>",
spikemode  = 'across', #toaxis, across, marker
spikesnap = 'cursor', zeroline=FALSE,titlefont = list(size = 24),
showline=TRUE,tickfont = list(size = 20),fixedrange=TRUE,
showgrid=TRUE),height = 480) %>% config(displayModeBar = FALSE)
plot
p1 <- ggplot(data = df_melt,aes(x= dia, y = Envios)) +
geom_point(size = 1.2, alpha = 0.75)+
geom_line(size = 1.2, alpha = 0.75,aes(color  = Legenda,group = Legenda)) +
scale_color_manual(values = c("darkgreen", "red","darkblue")) +
# scale_x_continuous(breaks = seq(0,1*input$cut_renda1,0.05*input$cut_renda1))
# scale_y_continuous(breaks = seq(0,1,0.1))+
axis.theme(title_size = 12,textsize = 12,pos_leg = "bottom",x.angle = 45,vjust = 1,hjust=1) +
geom_vline(xintercept = max(df_melt$dia),
linetype = "dashed", colour = "red", alpha = 0.75)
plot <- ggplotly(p1) %>% layout(hovermode = "x", shapes = list(vline(max(df_melt$dia))), spikedistance =  -1,margin = c(0,0,0,10),
xaxis = list(title = "<b>Qntd. Envios</b>", showspikes = TRUE, titlefont = list(size = 24),
spikemode  = 'across', #toaxis, across, marker
spikesnap = 'cursor',  ticks = "outside",tickangle = -45,
showline=TRUE,tickfont = list(size = 20),fixedrange=TRUE,
showgrid=TRUE),
yaxis = list (title = "<b>Dias</b>",
spikemode  = 'across', #toaxis, across, marker
spikesnap = 'cursor', zeroline=FALSE,titlefont = list(size = 24),
showline=TRUE,tickfont = list(size = 20),fixedrange=TRUE,
showgrid=TRUE),height = 480) %>% config(displayModeBar = FALSE)
vline <- function(x = 0, color = "green") {
list(
type = "line",
#y0 = 0,
#y1 = 1,
yref = "paper",
x0 = x,
x1 = x,
line = list(color = color, dash="dot")
)
}
p1 <- ggplot(data = df_melt,aes(x= dia, y = Envios)) +
geom_point(size = 1.2, alpha = 0.75)+
geom_line(size = 1.2, alpha = 0.75,aes(color  = Legenda,group = Legenda)) +
scale_color_manual(values = c("darkgreen", "red","darkblue")) +
# scale_x_continuous(breaks = seq(0,1*input$cut_renda1,0.05*input$cut_renda1))
# scale_y_continuous(breaks = seq(0,1,0.1))+
axis.theme(title_size = 12,textsize = 12,pos_leg = "bottom",x.angle = 45,vjust = 1,hjust=1) +
geom_vline(xintercept = max(df_melt$dia),
linetype = "dashed", colour = "red", alpha = 0.75)
plot <- ggplotly(p1) %>% layout(hovermode = "x", shapes = list(vline(max(df_melt$dia))), spikedistance =  -1,margin = c(0,0,0,10),
xaxis = list(title = "<b>Qntd. Envios</b>", showspikes = TRUE, titlefont = list(size = 24),
spikemode  = 'across', #toaxis, across, marker
spikesnap = 'cursor',  ticks = "outside",tickangle = -45,
showline=TRUE,tickfont = list(size = 20),fixedrange=TRUE,
showgrid=TRUE),
yaxis = list (title = "<b>Dias</b>",
spikemode  = 'across', #toaxis, across, marker
spikesnap = 'cursor', zeroline=FALSE,titlefont = list(size = 24),
showline=TRUE,tickfont = list(size = 20),fixedrange=TRUE,
showgrid=TRUE),height = 480) %>% config(displayModeBar = FALSE)
plot
p1 <- ggplot(data = df_melt,aes(x= dia, y = Envios)) +
geom_point(size = 1.2, alpha = 0.75)+
geom_line(size = 1.2, alpha = 0.75,aes(color  = Legenda,group = Legenda)) +
scale_color_manual(values = c("darkgreen", "red","darkblue")) +
# scale_x_continuous(breaks = seq(0,1*input$cut_renda1,0.05*input$cut_renda1))
# scale_y_continuous(breaks = seq(0,1,0.1))+
axis.theme(title_size = 12,textsize = 12,pos_leg = "bottom",x.angle = 45,vjust = 1,hjust=1) +
geom_vline(xintercept = max(df_melt$dia),
linetype = "dashed", colour = "red", alpha = 0.75)
plot <- ggplotly(p1) %>% layout(hovermode = "x", shapes = list(vline(2.5), list(type = "rect",
fillcolor = "red", line = list(color = "red"), opacity = 0.2,
x0 = 0.5, x1 = 7.5)), spikedistance =  -1,margin = c(0,0,0,10),
xaxis = list(title = "<b>Qntd. Envios</b>", showspikes = TRUE, titlefont = list(size = 24),
spikemode  = 'across', #toaxis, across, marker
spikesnap = 'cursor',  ticks = "outside",tickangle = -45,
showline=TRUE,tickfont = list(size = 20),fixedrange=TRUE,
showgrid=TRUE),
yaxis = list (title = "<b>Dias</b>",
spikemode  = 'across', #toaxis, across, marker
spikesnap = 'cursor', zeroline=FALSE,titlefont = list(size = 24),
showline=TRUE,tickfont = list(size = 20),fixedrange=TRUE,
showgrid=TRUE),height = 480) %>% config(displayModeBar = FALSE)
plot
plot <- ggplotly(p1) %>% layout(hovermode = "x", shapes = list(vline(max(df_melt$dia)), list(type = "rect",
fillcolor = "red", line = list(color = "red"), opacity = 0.2,
x0 = 0.5, x1 = 7.5)), spikedistance =  -1,margin = c(0,0,0,10),
xaxis = list(title = "<b>Qntd. Envios</b>", showspikes = TRUE, titlefont = list(size = 24),
spikemode  = 'across', #toaxis, across, marker
spikesnap = 'cursor',  ticks = "outside",tickangle = -45,
showline=TRUE,tickfont = list(size = 20),fixedrange=TRUE,
showgrid=TRUE),
yaxis = list (title = "<b>Dias</b>",
spikemode  = 'across', #toaxis, across, marker
spikesnap = 'cursor', zeroline=FALSE,titlefont = list(size = 24),
showline=TRUE,tickfont = list(size = 20),fixedrange=TRUE,
showgrid=TRUE),height = 480) %>% config(displayModeBar = FALSE)
plot
p1 <- ggplot(data = df_melt,aes(x= dia, y = Envios)) +
geom_point(size = 1.2, alpha = 0.75)+
geom_line(size = 1.2, alpha = 0.75,aes(color  = Legenda,group = Legenda)) +
scale_color_manual(values = c("darkgreen", "red","darkblue")) +
# scale_x_continuous(breaks = seq(0,1*input$cut_renda1,0.05*input$cut_renda1))
# scale_y_continuous(breaks = seq(0,1,0.1))+
axis.theme(title_size = 12,textsize = 12,pos_leg = "bottom",x.angle = 45,vjust = 1,hjust=1) +
geom_vline(xintercept = max(df_melt$dia),
linetype = "dashed", colour = "red", alpha = 0.75)
plot <- ggplotly(p1) %>% layout(hovermode = "x", spikedistance =  -1,margin = c(0,0,0,10),
xaxis = list(title = "<b>Qntd. Envios</b>", showspikes = TRUE, titlefont = list(size = 24),
spikemode  = 'across', #toaxis, across, marker
spikesnap = 'cursor',  ticks = "outside",tickangle = -45,
showline=TRUE,tickfont = list(size = 20),fixedrange=TRUE,
showgrid=TRUE),
yaxis = list (title = "<b>Dias</b>",
spikemode  = 'across', #toaxis, across, marker
spikesnap = 'cursor', zeroline=FALSE,titlefont = list(size = 24),
showline=TRUE,tickfont = list(size = 20),fixedrange=TRUE,
showgrid=TRUE),height = 480) %>% config(displayModeBar = FALSE) %>%
layout(plot_bgcolor = "#e5ecf6", shapes = list(vline(2.5), list(type = "rect",
fillcolor = "red", line = list(color = "red"), opacity = 0.2,
y0 = 0.9, y1 = 2.6, x0 = 0.5, x1 = 7.5)))
plot
plot <- ggplotly(p1) %>% layout(hovermode = "x", spikedistance =  -1,margin = c(0,0,0,10),
xaxis = list(title = "<b>Qntd. Envios</b>", showspikes = TRUE, titlefont = list(size = 24),
spikemode  = 'across', #toaxis, across, marker
spikesnap = 'cursor',  ticks = "outside",tickangle = -45,
showline=TRUE,tickfont = list(size = 20),fixedrange=TRUE,
showgrid=TRUE),
yaxis = list (title = "<b>Dias</b>",
spikemode  = 'across', #toaxis, across, marker
spikesnap = 'cursor', zeroline=FALSE,titlefont = list(size = 24),
showline=TRUE,tickfont = list(size = 20),fixedrange=TRUE,
showgrid=TRUE),height = 480) %>% config(displayModeBar = FALSE) %>%
layout(plot_bgcolor = "#e5ecf6", shapes = list(vline(max(df_melt$dia)), list(type = "rect",
fillcolor = "red", line = list(color = "red"), opacity = 0.2,
y0 = 0.9, y1 = 2.6, x0 = 0.5, x1 = 7.5)))
plot
contatos <- read_url_xlsx(url = "https://crefaz-my.sharepoint.com/:x:/g/personal/gestaodedados4_crefaz_onmicrosoft_com/EfhjDBKSLYVFllg8dkmpktYBIzcL1DZiOwvoxly63-ikqw?download=1")
#source(file = "funcoes.R",encoding = "UTF-8")
read_url_csv <- function(url, sep = ",",enc = "UTF-8"){
tmpFile <- tempfile()
download.file(url, destfile = tmpFile)
url_csv <- read.csv(tmpFile, sep = sep,encoding = enc)
return(url_csv)
}
read_url_xlsx <- function(url,sheet = "Calendario"){
tmpFile <- tempfile()
download.file(url, destfile = tmpFile)
url_csv <- read_xlsx(path = tmpFile,sheet = sheet)
return(url_csv)
}
contatos <- read_url_xlsx(url = "https://crefaz-my.sharepoint.com/:x:/g/personal/gestaodedados4_crefaz_onmicrosoft_com/EfhjDBKSLYVFllg8dkmpktYBIzcL1DZiOwvoxly63-ikqw?download=1")
contatos <- read_url_xlsx(url = "https://crefaz-my.sharepoint.com/:x:/g/personal/gestaodedados4_crefaz_onmicrosoft_com/EfhjDBKSLYVFllg8dkmpktYBIzcL1DZiOwvoxly63-ikqw?download=1",sheet = "Planilha1")
contatos <- read_url_xlsx(url = "https://crefaz-my.sharepoint.com/:x:/g/personal/gestaodedados4_crefaz_onmicrosoft_com/EfhjDBKSLYVFllg8dkmpktYBIzcL1DZiOwvoxly63-ikqw?download=1",sheet = "Planilha1")
contatos <- read_url_xlsx(url = "https://crefaz-my.sharepoint.com/:x:/g/personal/gestaodedados4_crefaz_onmicrosoft_com/EfhjDBKSLYVFllg8dkmpktYBIzcL1DZiOwvoxly63-ikqw?download=1",sheet = "Planilha1")
contatos
contatos <- read_url_xlsx(url = "https://crefaz-my.sharepoint.com/:x:/g/personal/gestaodedados4_crefaz_onmicrosoft_com/EfhjDBKSLYVFllg8dkmpktYBIzcL1DZiOwvoxly63-ikqw?download=1",sheet = "Planilha1")
contatos <- read_url_xlsx(url = "https://crefaz-my.sharepoint.com/:x:/g/personal/gestaodedados4_crefaz_onmicrosoft_com/EfhjDBKSLYVFllg8dkmpktYBIzcL1DZiOwvoxly63-ikqw?download=1",sheet = "Planilha1")
contatos
contatos <- read_url_xlsx(url = "https://crefaz-my.sharepoint.com/:x:/g/personal/gestaodedados4_crefaz_onmicrosoft_com/EfhjDBKSLYVFllg8dkmpktYBIzcL1DZiOwvoxly63-ikqw?download=1",sheet = "Planilha1")
contatos <- read_url_csv(url = "https://crefaz-my.sharepoint.com/:x:/g/personal/gestaodedados4_crefaz_onmicrosoft_com/EfhjDBKSLYVFllg8dkmpktYBIzcL1DZiOwvoxly63-ikqw?download=1")
contatos
contatos <- read_url_csv(url = "https://crefaz-my.sharepoint.com/:x:/g/personal/gestaodedados4_crefaz_onmicrosoft_com/EUJqJfojMwtMilqTonJmeoABp57gRp0UWzWlzdmo_xDLCA?download=1")
contatos
contatos <- read_url_csv(url = "https://crefaz-my.sharepoint.com/:x:/g/personal/gestaodedados4_crefaz_onmicrosoft_com/EUJqJfojMwtMilqTonJmeoABp57gRp0UWzWlzdmo_xDLCA?download=1",sep = ";")
contatos
contatos <- read_url_csv(url = "https://crefaz-my.sharepoint.com/:x:/g/personal/gestaodedados4_crefaz_onmicrosoft_com/EUJqJfojMwtMilqTonJmeoABp57gRp0UWzWlzdmo_xDLCA?download=1",sep = ";",enc = "latin1")
contatos
qtd_contatos_enviados <- contatos %>% filter(CELULAR != "(44) 99890-6216")
qtd_contatos_enviados
View(contatos)
qtd_contatos_enviados <- contatos %>% filter(CELULAR != "(44) 99890-6216") %>% summarise(qtd_filiais = n(),
qtd_regionais = length(unique(Regional)))
qtd_contatos_enviados
qtd_contatos_enviados <- contatos %>% dplyr::filter(CELULAR != "(44) 99890-6216") %>% dplyr::summarise(qtd_filiais = n(),
qtd_regionais = length(unique(Regional)))
qtd_contatos_enviados
qtd_contatos_enviados <- contatos %>% dplyr::filter(CELULAR != "(44) 99890-6216") %>% dplyr::summarise(
qtd_filiais   = n(),
qtd_regionais = length(unique(Regional)),
qtd_dir       = qtd_regionais*3)
qtd_contatos_enviados
runApp()
tapply(X = df_melt$Envios,INDEX = df_melt$Legenda,FUN = mean)
df_melt %>% tapply(X = df_melt$Envios,INDEX = df_melt$Legenda,FUN = mean)
df_melt %>% tapply(X = df_melt$Envios,INDEX = df_melt$Legenda,FUN = mean)
df_melt$Envios %>% tapply(X = df_melt$Envios,INDEX = df_melt$Legenda,FUN = mean)
tapply(X = df_melt$Envios,INDEX = df_melt$Legenda,FUN = mean)
medias <-  tapply(X = df_melt$Envios,INDEX = df_melt$Legenda,FUN = mean) %>% ldply(data.frame)
medias
p1 <- ggplot(data = df_melt,aes(x= dia, y = Envios)) +
geom_point(size = 1.2, alpha = 0.75)+
geom_line(size = 1.2, alpha = 0.75,aes(color  = Legenda,group = Legenda)) +
scale_color_manual(values = c("darkgreen", "red","darkblue")) +
# scale_x_continuous(breaks = seq(0,1*input$cut_renda1,0.05*input$cut_renda1))
# scale_y_continuous(breaks = seq(0,1,0.1))+
axis.theme(title_size = 12,textsize = 12,pos_leg = "bottom",x.angle = 45,vjust = 1,hjust=1) +
geom_vline(xintercept = max(df_melt$dia),
linetype = "dashed", colour = "red", alpha = 1,size = 1.5)
p1
p1 <- ggplot(data = df_melt,aes(x= dia, y = Envios)) +
geom_point(size = 1.2, alpha = 0.75)+
geom_line(size = 1.2, alpha = 0.75,aes(color  = Legenda,group = Legenda)) +
scale_color_manual(values = c("darkgreen", "red","darkblue")) +
# scale_x_continuous(breaks = seq(0,1*input$cut_renda1,0.05*input$cut_renda1))
# scale_y_continuous(breaks = seq(0,1,0.1))+
axis.theme(title_size = 12,textsize = 12,pos_leg = "bottom",x.angle = 45,vjust = 1,hjust=1) +
geom_vline(xintercept = max(df_melt$dia),
linetype = "dashed", colour = "red", alpha = 1,size = 1.5) +
geom_hline(yintercept = sum(qtd_contatos_enviados),
linetype = "dashed", colour = "red", alpha = 1,size = 1.5)
p1
p1 <- ggplot(data = df_melt,aes(x= dia, y = Envios)) +
geom_point(size = 1.2, alpha = 0.75)+
geom_line(size = 1.2, alpha = 0.75,aes(color  = Legenda,group = Legenda)) +
scale_color_manual(values = c("darkgreen", "red","darkblue")) +
# scale_x_continuous(breaks = seq(0,1*input$cut_renda1,0.05*input$cut_renda1))
# scale_y_continuous(breaks = seq(0,1,0.1))+
axis.theme(title_size = 12,textsize = 12,pos_leg = "bottom",x.angle = 45,vjust = 1,hjust=1) +
geom_vline(xintercept = max(df_melt$dia),
linetype = "dashed", colour = "red", alpha = 1,size = 1.5) +
geom_hline(yintercept = sum(qtd_contatos_enviados),
linetype = "dashed", colour = "red", alpha = 1,size = 1.5)
plot <- ggplotly(p1) %>% layout(hovermode = "x", spikedistance =  -1,margin = c(0,0,0,10),
xaxis = list(title = "<b>Qntd. Envios</b>", showspikes = TRUE, titlefont = list(size = 24),
spikemode  = 'across', #toaxis, across, marker
spikesnap = 'cursor',  ticks = "outside",tickangle = -45,
showline=TRUE,tickfont = list(size = 20),fixedrange=TRUE,
showgrid=TRUE),
yaxis = list (title = "<b>Dias</b>",
spikemode  = 'across', #toaxis, across, marker
spikesnap = 'cursor', zeroline=FALSE,titlefont = list(size = 24),
showline=TRUE,tickfont = list(size = 20),fixedrange=TRUE,
showgrid=TRUE),height = 480) %>% config(displayModeBar = FALSE)
plot
p1 <- ggplot(data = df_melt,aes(x= dia, y = Envios)) +
geom_point(size = 1.2, alpha = 0.75)+
geom_line(size = 1.2, alpha = 0.75,aes(color  = Legenda,group = Legenda)) +
scale_color_manual(values = c("darkgreen", "red","darkblue")) +
# scale_x_continuous(breaks = seq(0,1*input$cut_renda1,0.05*input$cut_renda1))
# scale_y_continuous(breaks = seq(0,1,0.1))+
axis.theme(title_size = 12,textsize = 12,pos_leg = "bottom",x.angle = 45,vjust = 1,hjust=1) +
geom_vline(xintercept = max(df_melt$dia),
linetype = "dashed", colour = "red", alpha = 1,size = 0.8) +
geom_hline(yintercept = sum(qtd_contatos_enviados),
linetype = "dashed", colour = "red", alpha = 1,size = 0.8)
plot <- ggplotly(p1) %>% layout(hovermode = "x", spikedistance =  -1,margin = c(0,0,0,10),
xaxis = list(title = "<b>Qntd. Envios</b>", showspikes = TRUE, titlefont = list(size = 24),
spikemode  = 'across', #toaxis, across, marker
spikesnap = 'cursor',  ticks = "outside",tickangle = -45,
showline=TRUE,tickfont = list(size = 20),fixedrange=TRUE,
showgrid=TRUE),
yaxis = list (title = "<b>Dias</b>",
spikemode  = 'across', #toaxis, across, marker
spikesnap = 'cursor', zeroline=FALSE,titlefont = list(size = 24),
showline=TRUE,tickfont = list(size = 20),fixedrange=TRUE,
showgrid=TRUE),height = 480) %>% config(displayModeBar = FALSE)
plot
x1$`Qntd. Esperada` <- qtd_contatos_enviados %>% sum
x1$`Qntd. Esperada`
df_melt         <- x1 %>% reshape2::melt(id.vars = "dia",measure.vars = c("total","pending","sent"),value.name = "Envios",variable.name= "Legenda")
df_melt$Legenda <- as.character(df_melt$Legenda)
#df_melt         <- df_melt %>% dplyr::group_by(Legenda) %>% summarise("Acumulado" = cumsum(Envios))
df_melt_acumulado  <- tapply(X = df_melt$Envios,INDEX = df_melt$Legenda,FUN = cumsum)
acumulado         <- c(df_melt_acumulado$total,df_melt_acumulado$pending,df_melt_acumulado$sent)
df_melt$Acumulado <- acumulado
medias <-  tapply(X = df_melt$Envios,INDEX = df_melt$Legenda,FUN = mean) %>% ldply(data.frame)
df_melt$Media <- ifelse(df_melt$Legenda == "Pendente",)
vline <- function(x = 0, color = "green") {
list(
type = "line",
#y0 = 0,
#y1 = 1,
yref = "paper",
x0 = x,
x1 = x,
line = list(color = color, dash="dot")
)
}
p1 <- ggplot(data = df_melt,aes(x= dia, y = Envios)) +
geom_point(size = 1.2, alpha = 0.75)+
geom_line(size = 1.2, alpha = 0.75,aes(color  = Legenda,group = Legenda)) +
scale_color_manual(values = c("darkgreen", "red","darkblue")) +
# scale_x_continuous(breaks = seq(0,1*input$cut_renda1,0.05*input$cut_renda1))
# scale_y_continuous(breaks = seq(0,1,0.1))+
axis.theme(title_size = 12,textsize = 12,pos_leg = "bottom",x.angle = 45,vjust = 1,hjust=1) +
geom_vline(xintercept = max(df_melt$dia),
linetype = "dashed", colour = "red", alpha = 1,size = 0.8) +
geom_hline(yintercept = sum(qtd_contatos_enviados),
linetype = "dashed", colour = "red", alpha = 1,size = 0.8)
plot <- ggplotly(p1) %>% layout(hovermode = "x", spikedistance =  -1,margin = c(0,0,0,10),
xaxis = list(title = "<b>Qntd. Envios</b>", showspikes = TRUE, titlefont = list(size = 24),
spikemode  = 'across', #toaxis, across, marker
spikesnap = 'cursor',  ticks = "outside",tickangle = -45,
showline=TRUE,tickfont = list(size = 20),fixedrange=TRUE,
showgrid=TRUE),
yaxis = list (title = "<b>Dias</b>",
spikemode  = 'across', #toaxis, across, marker
spikesnap = 'cursor', zeroline=FALSE,titlefont = list(size = 24),
showline=TRUE,tickfont = list(size = 20),fixedrange=TRUE,
showgrid=TRUE),height = 480) %>% config(displayModeBar = FALSE)
plot
runApp()
runApp()
runApp()
runApp()
